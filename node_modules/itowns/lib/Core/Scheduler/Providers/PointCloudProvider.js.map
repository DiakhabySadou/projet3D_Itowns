{"version":3,"sources":["../../../../src/Core/Scheduler/Providers/PointCloudProvider.js"],"names":["THREE","createChildAABB","aabb","childIndex","min","max","dHalfLength","Vector3","copy","sub","multiplyScalar","xHalfLength","x","yHalfLength","y","zHalfLength","z","cmin","cmax","add","Box3","parseOctree","layer","hierarchyStepSize","root","arrayBuffer","baseurl","name","networkOptions","then","blob","view","DataView","stack","offset","childrenBitField","getUint8","numPoints","getUint32","children","push","length","byteLength","snode","shift","i","c","n","childname","bounds","bbox","url","myname","substr","item","nextuuid","addPickingAttribute","points","geometry","attributes","position","count","ids","Uint8Array","baseId","console","warn","v","addAttribute","BufferAttribute","loadPointFile","fetch","foo","ab","metadata","customBinFormat","parse","preprocessDataLayer","file","group","Group","object3d","updateMatrixWorld","bboxes","octreeDepthLimit","pointBudget","pointSize","isNaN","overdraw","type","preUpdate","update","postUpdate","json","cloud","scale","undefined","pointAttributes","boundingBox","lx","ly","lz","ux","uy","uz","octreeDir","table","idx","entry","xmin","ymin","zmin","xmax","ymax","zmax","log","executeCommand","command","node","requester","notifyChange","extension","isLeaf","set","tightbbox","translate","material","transparent","opacity","uniforms","value","updateMatrix","layers","threejsLayer","id"],"mappings":"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","file":"PointCloudProvider.js","sourcesContent":["import * as THREE from 'three';\nimport Fetcher from './Fetcher';\nimport PointCloudProcessing from '../../../Process/PointCloudProcessing';\nimport PotreeBinLoader from './PotreeBinLoader';\nimport PotreeCinLoader from './PotreeCinLoader';\n\n// Create an A(xis)A(ligned)B(ounding)B(ox) for the child `childIndex` of one aabb.\n// (PotreeConverter protocol builds implicit octree hierarchy by applying the same\n// subdivision algo recursively)\nfunction createChildAABB(aabb, childIndex) {\n    // Code taken from potree\n    var min = aabb.min;\n    var max = aabb.max;\n    var dHalfLength = new THREE.Vector3().copy(max).sub(min).multiplyScalar(0.5);\n    var xHalfLength = new THREE.Vector3(dHalfLength.x, 0, 0);\n    var yHalfLength = new THREE.Vector3(0, dHalfLength.y, 0);\n    var zHalfLength = new THREE.Vector3(0, 0, dHalfLength.z);\n\n    var cmin = min;\n    var cmax = new THREE.Vector3().add(min).add(dHalfLength);\n\n    if (childIndex === 1) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength);\n    } else if (childIndex === 3) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength).add(yHalfLength);\n    } else if (childIndex === 0) {\n        min = cmin;\n        max = cmax;\n    } else if (childIndex === 2) {\n        min = new THREE.Vector3().copy(cmin).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(yHalfLength);\n    } else if (childIndex === 5) {\n        min = new THREE.Vector3().copy(cmin).add(zHalfLength).add(xHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(zHalfLength).add(xHalfLength);\n    } else if (childIndex === 7) {\n        min = new THREE.Vector3().copy(cmin).add(dHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(dHalfLength);\n    } else if (childIndex === 4) {\n        min = new THREE.Vector3().copy(cmin).add(xHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(xHalfLength);\n    } else if (childIndex === 6) {\n        min = new THREE.Vector3().copy(cmin).add(xHalfLength).add(yHalfLength);\n        max = new THREE.Vector3().copy(cmax).add(xHalfLength).add(yHalfLength);\n    }\n\n    return new THREE.Box3(min, max);\n}\n\n\nfunction parseOctree(layer, hierarchyStepSize, root) {\n    return Fetcher.arrayBuffer(`${root.baseurl}/r${root.name}.hrc`, layer.networkOptions).then((blob) => {\n        const view = new DataView(blob);\n\n        const stack = [];\n\n        let offset = 0;\n\n        root.childrenBitField = view.getUint8(0); offset += 1;\n        root.numPoints = view.getUint32(1, true); offset += 4;\n        root.children = [];\n\n        stack.push(root);\n\n        while (stack.length && offset < blob.byteLength) {\n            const snode = stack.shift();\n            // look up 8 children\n            for (let i = 0; i < 8; i++) {\n                // does snode have a #i child ?\n                if (snode.childrenBitField & (1 << i) && (offset + 5) <= blob.byteLength) {\n                    const c = view.getUint8(offset); offset += 1;\n                    let n = view.getUint32(offset, true); offset += 4;\n                    if (n == 0) {\n                        n = root.numPoints;\n                    }\n                    const childname = snode.name + i;\n                    const bounds = createChildAABB(snode.bbox, i);\n\n                    let url = root.baseurl;\n                    if ((childname.length % hierarchyStepSize) == 0) {\n                        const myname = childname.substr(root.name.length);\n                        url = `${root.baseurl}/${myname}`;\n                    }\n                    const item = { numPoints: n, childrenBitField: c, children: [], name: childname, baseurl: url, bbox: bounds };\n                    snode.children.push(item);\n                    stack.push(item);\n                }\n            }\n        }\n\n        return root;\n    });\n}\n\nlet nextuuid = 1;\nfunction addPickingAttribute(points) {\n    // generate unique id for picking\n    const numPoints = points.geometry.attributes.position.count;\n    const ids = new Uint8Array(4 * numPoints);\n    const baseId = nextuuid++;\n    if (numPoints > 0xffff || baseId > 0xffff) {\n        // TODO: fixme\n        // eslint-disable-next-line no-console\n        console.warn('Currently picking is limited to Points with less than 65535 elements and less than 65535 Points instances');\n        return points;\n    }\n    for (let i = 0; i < numPoints; i++) {\n        // todo numpoints > 16bits\n        const v = (baseId << 16) | i;\n        ids[4 * i + 0] = (v & 0xff000000) >> 24;\n        ids[4 * i + 1] = (v & 0x00ff0000) >> 16;\n        ids[4 * i + 2] = (v & 0x0000ff00) >> 8;\n        ids[4 * i + 3] = (v & 0x000000ff) >> 0;\n    }\n\n    points.baseId = baseId;\n    points.geometry.addAttribute('unique_id', new THREE.BufferAttribute(ids, 4, true));\n    return points;\n}\n\n\nfunction loadPointFile(layer, url) {\n    return fetch(url, layer.networkOptions).then(foo => foo.arrayBuffer()).then((ab) => {\n        if (layer.metadata.customBinFormat) {\n            return addPickingAttribute(PotreeCinLoader.parse(ab));\n        } else {\n            return addPickingAttribute(PotreeBinLoader.parse(ab));\n        }\n    });\n}\n\nexport default {\n    preprocessDataLayer(layer) {\n        if (!layer.file) {\n            layer.file = 'cloud.js';\n        }\n        if (!layer.group) {\n            layer.group = new THREE.Group();\n            layer.object3d.add(layer.group);\n            layer.group.updateMatrixWorld();\n        }\n\n        if (!layer.bboxes) {\n            layer.bboxes = new THREE.Group();\n            layer.object3d.add(layer.bboxes);\n            layer.bboxes.updateMatrixWorld();\n        }\n\n        // default options\n        layer.networkOptions = layer.networkOptions || {};\n        layer.octreeDepthLimit = layer.octreeDepthLimit || -1;\n        layer.pointBudget = layer.pointBudget || 15000000;\n        layer.pointSize = layer.pointSize === 0 || !isNaN(layer.pointSize) ? layer.pointSize : 4;\n        layer.overdraw = layer.overdraw || 2;\n        layer.type = 'geometry';\n\n        // default update methods\n        layer.preUpdate = PointCloudProcessing.preUpdate;\n        layer.update = PointCloudProcessing.update;\n        layer.postUpdate = PointCloudProcessing.postUpdate;\n\n\n        return Fetcher.json(`${layer.url}/${layer.file}`, layer.networkOptions).then((cloud) => {\n            layer.metadata = cloud;\n\n            let bbox;\n\n            // Lopocs pointcloud server can expose the same file structure as PotreeConverter output.\n            // The only difference is the metadata root file (cloud.js vs infos/sources), and we can\n            // check for the existence of a `scale` field.\n            // (if `scale` is defined => we're fetching files from PotreeConverter)\n            if (layer.metadata.scale != undefined) {\n                // PotreeConverter format\n                layer.metadata.customBinFormat = layer.metadata.pointAttributes === 'CIN';\n                bbox = new THREE.Box3(\n                    new THREE.Vector3(cloud.boundingBox.lx, cloud.boundingBox.ly, cloud.boundingBox.lz),\n                    new THREE.Vector3(cloud.boundingBox.ux, cloud.boundingBox.uy, cloud.boundingBox.uz));\n            } else {\n                // Lopocs\n                layer.metadata.scale = 1;\n                layer.metadata.octreeDir = `itowns/${layer.table}.points`;\n                layer.metadata.hierarchyStepSize = 1000000; // ignore this with lopocs\n                layer.metadata.customBinFormat = true;\n\n                let idx = 0;\n                for (const entry of cloud) {\n                    if (entry.table == layer.table) {\n                        break;\n                    }\n                    idx++;\n                }\n                bbox = new THREE.Box3(\n                   new THREE.Vector3(cloud[idx].bbox.xmin, cloud[idx].bbox.ymin, cloud[idx].bbox.zmin),\n                   new THREE.Vector3(cloud[idx].bbox.xmax, cloud[idx].bbox.ymax, cloud[idx].bbox.zmax));\n            }\n\n\n            return parseOctree(\n                    layer,\n                    layer.metadata.hierarchyStepSize,\n                    { baseurl: `${layer.url}/${cloud.octreeDir}/r`, name: '', bbox });\n        }).then((root) => {\n            // eslint-disable-next-line no-console\n            console.log('LAYER metadata:', root);\n            layer.root = root;\n            return layer;\n        });\n    },\n\n    executeCommand(command) {\n        const layer = command.layer;\n        const node = command.requester;\n\n        // Query HRC if we don't have children metadata yet.\n        if (node.childrenBitField && node.children.length === 0) {\n            parseOctree(layer, layer.metadata.hierarchyStepSize, node).then(() => command.view.notifyChange(false));\n        }\n\n        const extension = layer.metadata.customBinFormat ? 'cin' : 'bin';\n\n        // `isLeaf` is for lopocs and allows the pointcloud server to consider that the current\n        // node is the last one, even if we could subdivide even further.\n        // It's necessary because lopocs doens't know about the hierarchy (it generates it on the fly\n        // when we request .hrc files)\n        const url = `${node.baseurl}/r${node.name}.${extension}?isleaf=${command.isLeaf ? 1 : 0}`;\n\n        return loadPointFile(layer, url).then((points) => {\n            points.position.copy(node.bbox.min);\n            points.scale.set(layer.metadata.scale, layer.metadata.scale, layer.metadata.scale);\n            points.tightbbox.min.x *= layer.metadata.scale;\n            points.tightbbox.min.y *= layer.metadata.scale;\n            points.tightbbox.min.z *= layer.metadata.scale;\n            points.tightbbox.max.x *= layer.metadata.scale;\n            points.tightbbox.max.y *= layer.metadata.scale;\n            points.tightbbox.max.z *= layer.metadata.scale;\n            points.tightbbox.translate(node.bbox.min);\n            points.material.transparent = layer.opacity < 1.0;\n            points.material.uniforms.opacity.value = layer.opacity;\n            points.updateMatrix();\n            points.layers.set(layer.threejsLayer);\n            points.layer = layer.id;\n            return points;\n        });\n    },\n};\n"]}