{"version":3,"sources":["../../../../src/Core/Scheduler/Providers/TileProvider.js"],"names":["TileProvider","call","prototype","constructor","preprocessDataLayer","layer","view","scheduler","schemeTile","Error","id","level0Nodes","onTileCreated","promises","root","push","undefined","all","then","level0s","level0","object3d","add","updateMatrixWorld","executeCommand","command","extent","requester","material","reject","parent","params","layerId","level","segment","segments","materialOptions","disableSkirt","param","tileParams","Object","hasOwnProperty","overrideMaterials","materialConstructor","geometry","overrideGeometries","geometryConstructor","builder","tile","layers","set","threejsLayer","center","sub","position","copy","transparent","opacity","uniforms","value","setVisibility","updateMatrix","setBBoxZ","OBB","z","min","max","useColorTextureElevation","colorTextureElevationMinZ","colorTextureElevationMaxZ","resolve"],"mappings":"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","file":"TileProvider.js","sourcesContent":["/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n/*\n * A Faire\n * Les tuiles de longitude identique ont le maillage et ne demande pas 1 seule calcul pour la génération du maillage\n *\n *\n *\n *\n */\n\nimport Provider from './Provider';\nimport TileGeometry from '../../TileGeometry';\nimport TileMesh from '../../TileMesh';\nimport CancelledCommandException from '../CancelledCommandException';\nimport LayeredMaterial from '../../../Renderer/LayeredMaterial';\nimport { requestNewTile } from '../../../Process/TiledNodeProcessing';\n\nfunction TileProvider() {\n    Provider.call(this, null);\n}\n\nTileProvider.prototype = Object.create(Provider.prototype);\n\nTileProvider.prototype.constructor = TileProvider;\n\nTileProvider.prototype.preprocessDataLayer = function preprocessLayer(layer, view, scheduler) {\n    if (!layer.schemeTile) {\n        throw new Error(`Cannot init tiled layer without schemeTile for layer ${layer.id}`);\n    }\n\n    layer.level0Nodes = [];\n    layer.onTileCreated = layer.onTileCreated || (() => {});\n\n    const promises = [];\n\n    for (const root of layer.schemeTile) {\n        promises.push(requestNewTile(view, scheduler, layer, root, undefined, 0));\n    }\n    return Promise.all(promises).then((level0s) => {\n        layer.level0Nodes = level0s;\n        for (const level0 of level0s) {\n            layer.object3d.add(level0);\n            level0.updateMatrixWorld();\n        }\n    });\n};\n\nTileProvider.prototype.executeCommand = function executeCommand(command) {\n    var extent = command.extent;\n    if (command.requester &&\n        !command.requester.material) {\n        // request has been deleted\n        return Promise.reject(new CancelledCommandException(command));\n    }\n\n    var parent = command.requester;\n\n\n    // build tile\n    var params = {\n        layerId: command.layer.id,\n        extent,\n        level: (command.level === undefined) ? (parent.level + 1) : command.level,\n        segment: command.layer.segments || 16,\n        materialOptions: command.layer.materialOptions,\n        disableSkirt: command.layer.disableSkirt,\n    };\n\n    for (const param in command.layer.tileParams) {\n        if (Object.hasOwnProperty.call(command.layer.tileParams, param)) {\n            params[param] = command.layer.tileParams[param];\n        }\n    }\n\n    let material;\n    if (params.overrideMaterials) {\n        material = new params.materialConstructor(params);\n    } else {\n        material = new LayeredMaterial(command.layer.materialOptions);\n    }\n    let geometry;\n    if (params.overrideGeometries) {\n        geometry = new params.geometryConstructor(params, command.layer.builder);\n    } else {\n        geometry = new TileGeometry(params, command.layer.builder);\n    }\n\n    var tile = new TileMesh(geometry, material, params);\n\n    tile.layer = command.layer.id;\n    tile.layers.set(command.threejsLayer);\n\n    if (parent) {\n        params.center.sub(parent.geometry.center);\n    }\n\n    tile.position.copy(params.center);\n    tile.material.transparent = command.layer.opacity < 1.0;\n    tile.material.uniforms.opacity.value = command.layer.opacity;\n    tile.setVisibility(false);\n    tile.updateMatrix();\n    if (parent) {\n        tile.setBBoxZ(parent.OBB().z.min, parent.OBB().z.max);\n    } else if (command.layer.materialOptions && command.layer.materialOptions.useColorTextureElevation) {\n        tile.setBBoxZ(command.layer.materialOptions.colorTextureElevationMinZ, command.layer.materialOptions.colorTextureElevationMaxZ);\n    }\n\n    return Promise.resolve(tile);\n};\n\nexport default TileProvider;\n"]}