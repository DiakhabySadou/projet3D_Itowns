{"version":3,"sources":["../../../../src/Core/Scheduler/Providers/WFS_Provider.js"],"names":["WFS_Provider","cache","pointOrder","prototype","constructor","url","bbox","layer","box","as","projection","w","west","s","south","e","east","n","north","customUrl","replace","preprocessDataLayer","typeName","Error","format","options","mimetype","crs","version","extent","tileInsideLimit","tile","level","undefined","intersectsExtent","executeCommand","command","requester","destinationCrs","view","referenceCrs","supportedFormats","json","getFeatures","bind","geojson","func","then","resolve","result","reject","assignLayer","object","id","layers","set","threejsLayer","children","c","material","feature","getRessource","convert","networkOptions","parse","filter","getPointOrder","lat","long","type","properties","code","name","regExpEpsg","RegExp","test","regExpOgc"],"mappings":"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","file":"WFS_Provider.js","sourcesContent":["/**\n * Generated On: 2016-03-5\n * Class: WFS_Provider\n * Description: Provides data from a WFS stream\n */\n\nimport Extent from '../../Geographic/Extent';\nimport Provider from './Provider';\nimport Fetcher from './Fetcher';\nimport CacheRessource from './CacheRessource';\nimport GeoJSON2Features from '../../../Renderer/ThreeExtended/GeoJSON2Features';\nimport Feature2Mesh from '../../../Renderer/ThreeExtended/Feature2Mesh';\n\nfunction WFS_Provider() {\n    this.cache = CacheRessource();\n    this.pointOrder = new Map();\n}\n\nWFS_Provider.prototype = Object.create(Provider.prototype);\nWFS_Provider.prototype.constructor = WFS_Provider;\n\nWFS_Provider.prototype.url = function url(bbox, layer) {\n    const box = bbox.as(layer.projection);\n    const w = box.west();\n    const s = box.south();\n    const e = box.east();\n    const n = box.north();\n\n    // TODO: use getPointOrder\n    const bboxInUnit = `${w},${s},${e},${n}`;\n\n    return layer.customUrl.replace('%bbox', bboxInUnit);\n};\n\nWFS_Provider.prototype.preprocessDataLayer = function preprocessDataLayer(layer) {\n    if (!layer.typeName) {\n        throw new Error('layer.typeName is required.');\n    }\n\n    layer.format = layer.options.mimetype || 'json';\n    layer.crs = layer.projection || 'EPSG:4326';\n    layer.version = layer.version || '2.0.2';\n    if (!(layer.extent instanceof Extent)) {\n        layer.extent = new Extent(layer.projection, layer.extent);\n    }\n    layer.customUrl = `${layer.url\n                      }SERVICE=WFS&REQUEST=GetFeature&typeName=${layer.typeName\n                      }&VERSION=${layer.version\n                      }&SRSNAME=${layer.crs\n                      }&outputFormat=${layer.format\n                      }&BBOX=%bbox,${layer.crs}`;\n};\n\nWFS_Provider.prototype.tileInsideLimit = function tileInsideLimit(tile, layer) {\n    return (layer.level === undefined || tile.level === layer.level) && layer.extent.intersectsExtent(tile.extent);\n};\n\nWFS_Provider.prototype.executeCommand = function executeCommand(command) {\n    const layer = command.layer;\n    const tile = command.requester;\n    const destinationCrs = command.view.referenceCrs;\n\n    // TODO : support xml, gml2\n    const supportedFormats = {\n        json: this.getFeatures.bind(this),\n        geojson: this.getFeatures.bind(this),\n    };\n\n    const func = supportedFormats[layer.format];\n    if (func) {\n        return func(destinationCrs, tile, layer, command).then(result => command.resolve(result));\n    } else {\n        return Promise.reject(new Error(`Unsupported mimetype ${layer.format}`));\n    }\n};\n\nfunction assignLayer(object, layer) {\n    if (object) {\n        object.layer = layer.id;\n        object.layers.set(layer.threejsLayer);\n        for (const c of object.children) {\n            assignLayer(c, layer);\n        }\n        return object;\n    }\n}\n\nWFS_Provider.prototype.getFeatures = function getFeatures(crs, tile, layer) {\n    if (!layer.tileInsideLimit(tile, layer) || tile.material === null) {\n        return Promise.resolve();\n    }\n\n    const url = this.url(tile.extent.as(layer.crs), layer);\n    const result = {};\n\n    result.feature = this.cache.getRessource(url);\n\n    if (result.feature !== undefined) {\n        return Promise.resolve(result);\n    }\n\n    layer.convert = layer.convert ? layer.convert : Feature2Mesh.convert({});\n\n    return Fetcher.json(url, layer.networkOptions).then(geojson => assignLayer(layer.convert(GeoJSON2Features.parse(crs, geojson, tile.extent, { filter: layer.filter })), layer));\n};\n\nWFS_Provider.prototype.getPointOrder = function getPointOrder(crs) {\n    if (this.pointOrder[crs]) {\n        return this.pointOrder[crs];\n    }\n\n    var pointOrder = { lat: 0, long: 1 };\n\n    if (crs.type == 'EPSG' && crs.properties.code == '4326') {\n        pointOrder.long = 0;\n        pointOrder.lat = 1;\n        return pointOrder;\n    } else if (crs.type == 'name') {\n        if (crs.properties.name) {\n            var regExpEpsg = new RegExp(/^urn:[x-]?ogc:def:crs:EPSG:(\\d*.?\\d*)?:\\d{4}/);\n            if (regExpEpsg.test(crs.properties.name)) {\n                return pointOrder;\n            }\n            else {\n                var regExpOgc = new RegExp(/^urn:[x-]?ogc:def:crs:OGC:(\\d*.?\\d*)?:(CRS)?(WSG)?\\d{0,2}/);\n                if (regExpOgc.test(crs.properties.name)) {\n                    pointOrder.long = 0;\n                    pointOrder.lat = 1;\n                    return pointOrder;\n                }\n            }\n        }\n    }\n};\n\nexport default WFS_Provider;\n"]}