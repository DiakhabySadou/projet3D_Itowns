{"version":3,"sources":["../../src/Core/TileGeometry.js"],"names":["THREE","cache","Buffers","index","position","normal","uv","wgs84","pm","TileGeometry","params","builder","BufferGeometry","call","center","Center","clone","OBB","bufferAttribs","computeBuffers","setIndex","addAttribute","computeBoundingSphere","prototype","constructor","outBuffers","nSeg","segment","nVertex","disableSkirt","triangles","BufferAttribute","Float32Array","cacheKey","layerId","cachedBuffers","getRessource","mustBuildIndexAndWGS84","uvwgs84","Uint32Array","addRessource","widthSegments","Math","max","floor","heightSegments","idVertex","vertices","skirt","skirtEnd","Prepare","UV_WGS84","UV_PM","out","id","u","v","array","getUV_PM","y","verticesRow","vProjecte","uv_pm","undefined","x","uProjecte","vertex","VertexPosition","projected","id_m3","z","VertexNormal","push","concat","slice","reverse","bufferize","va","vb","vc","idVertex2","v1","v2","v3","v4","iStart","segmentSize","Vector3","fromArray","distanceTo","buildIndexSkirt","buildUVSkirt","i","length","id2_m3","idf"],"mappings":"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","file":"TileGeometry.js","sourcesContent":["import * as THREE from 'three';\nimport CacheRessource from './Scheduler/Providers/CacheRessource';\n\nconst cache = CacheRessource(); // TODO /!\\ singleton\n\nfunction Buffers() {\n    this.index = null;\n    this.position = null;\n    this.normal = null;\n    // 2 UV set per tile: wgs84 and pm\n    //    - wgs84: 1 texture per tile because tiles are using wgs84 projection\n    //    - pm: use multiple textures per tile.\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 0           |\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 1           |\n    //      +-------------------------+\n    //      |                         |\n    //      |     Texture 2           |\n    //      +-------------------------+\n    //        * u = wgs84.u\n    //        * v = textureid + v in this texture\n    this.uv = {\n        wgs84: null,\n        pm: null,\n    };\n}\n\nfunction TileGeometry(params, builder) {\n    // Constructor\n    THREE.BufferGeometry.call(this);\n\n    this.center = builder.Center(params).clone();\n    this.OBB = builder.OBB(params);\n\n    const bufferAttribs = this.computeBuffers(params, builder);\n\n    this.setIndex(bufferAttribs.index);\n    this.addAttribute('position', bufferAttribs.position);\n    this.addAttribute('normal', bufferAttribs.normal);\n    this.addAttribute('uv_wgs84', bufferAttribs.uv.wgs84);\n    this.addAttribute('uv_pm', bufferAttribs.uv.pm);\n\n    // ---> for SSE\n    this.computeBoundingSphere();\n}\n\n\nTileGeometry.prototype = Object.create(THREE.BufferGeometry.prototype);\n\nTileGeometry.prototype.constructor = TileGeometry;\n\nTileGeometry.prototype.computeBuffers = function computeBuffers(params, builder) {\n    // Create output buffers.\n    const outBuffers = new Buffers();\n\n    const nSeg = params.segment;\n    // segments count :\n    // Tile : (nSeg + 1) * (nSeg + 1)\n    // Skirt : 8 * (nSeg - 1)\n    const nVertex = (nSeg + 1) * (nSeg + 1) + (params.disableSkirt ? 0 : 4 * nSeg);\n    const triangles = (nSeg) * (nSeg) * 2 + (params.disableSkirt ? 0 : 4 * nSeg * 2);\n\n    outBuffers.position = new THREE.BufferAttribute(new Float32Array(nVertex * 3), 3);\n    outBuffers.normal = new THREE.BufferAttribute(new Float32Array(nVertex * 3), 3);\n    outBuffers.uv.pm = new THREE.BufferAttribute(new Float32Array(nVertex), 1);\n\n    // Read previously cached values (index and uv.wgs84 only depend on the # of triangles)\n    const cacheKey = params.layerId + triangles;\n    const cachedBuffers = cache.getRessource(cacheKey);\n    const mustBuildIndexAndWGS84 = !cachedBuffers;\n    if (cachedBuffers) {\n        outBuffers.index = cachedBuffers.index;\n        outBuffers.uv.wgs84 = cachedBuffers.uvwgs84;\n    } else {\n        outBuffers.index = new THREE.BufferAttribute(\n            new Uint32Array(triangles * 3), 1);\n        outBuffers.uv.wgs84 = new THREE.BufferAttribute(\n            new Float32Array(nVertex * 2), 2);\n\n        // Update cache\n        cache.addRessource(cacheKey, {\n            index: outBuffers.index,\n            uvwgs84: outBuffers.uv.wgs84,\n        });\n    }\n\n    var widthSegments = Math.max(2, Math.floor(nSeg) || 2);\n    var heightSegments = Math.max(2, Math.floor(nSeg) || 2);\n\n    var idVertex = 0;\n    const vertices = [];\n    let skirt = [];\n    const skirtEnd = [];\n\n    builder.Prepare(params);\n\n    var UV_WGS84 = function UV_WGS84() {};\n    var UV_PM = function UV_PM() {};\n\n    // Define UV computation functions if needed\n    if (mustBuildIndexAndWGS84) {\n        UV_WGS84 = function UV_WGS84(out, id, u, v) {\n            out.uv.wgs84.array[id * 2 + 0] = u;\n            out.uv.wgs84.array[id * 2 + 1] = v;\n        };\n    }\n    if (builder.getUV_PM) {\n        UV_PM = function UV_PM(out, id, u) {\n            out.uv.pm.array[id] = u;\n        };\n    }\n\n    for (let y = 0; y <= heightSegments; y++) {\n        var verticesRow = [];\n\n        const v = y / heightSegments;\n\n        builder.vProjecte(v, params);\n\n        var uv_pm = builder.getUV_PM ? builder.getUV_PM(params) : undefined;\n\n        for (let x = 0; x <= widthSegments; x++) {\n            const u = x / widthSegments;\n\n            builder.uProjecte(u, params);\n\n            var vertex = builder.VertexPosition(params, params.projected);\n\n            const id_m3 = idVertex * 3;\n\n            outBuffers.position.array[id_m3 + 0] = vertex.x - this.center.x;\n            outBuffers.position.array[id_m3 + 1] = vertex.y - this.center.y;\n            outBuffers.position.array[id_m3 + 2] = vertex.z - this.center.z;\n\n            var normal = builder.VertexNormal(params);\n\n            outBuffers.normal.array[id_m3 + 0] = normal.x;\n            outBuffers.normal.array[id_m3 + 1] = normal.y;\n            outBuffers.normal.array[id_m3 + 2] = normal.z;\n\n            UV_WGS84(outBuffers, idVertex, u, v);\n            UV_PM(outBuffers, idVertex, uv_pm);\n\n            if (!params.disableSkirt) {\n                if (y !== 0 && y !== heightSegments) {\n                    if (x === widthSegments) {\n                        skirt.push(idVertex);\n                    } else if (x === 0) {\n                        skirtEnd.push(idVertex);\n                    }\n                }\n            }\n\n            verticesRow.push(idVertex);\n\n            idVertex++;\n        }\n\n        vertices.push(verticesRow);\n\n        if (y === 0) {\n            skirt = skirt.concat(verticesRow);\n        } else if (y === heightSegments) {\n            skirt = skirt.concat(verticesRow.slice().reverse());\n        }\n    }\n\n    if (!params.disableSkirt) {\n        skirt = skirt.concat(skirtEnd.reverse());\n    }\n\n    function bufferize(va, vb, vc, idVertex) {\n        outBuffers.index.array[idVertex + 0] = va;\n        outBuffers.index.array[idVertex + 1] = vb;\n        outBuffers.index.array[idVertex + 2] = vc;\n        return idVertex + 3;\n    }\n\n    let idVertex2 = 0;\n\n    if (mustBuildIndexAndWGS84) {\n        for (let y = 0; y < heightSegments; y++) {\n            for (let x = 0; x < widthSegments; x++) {\n                const v1 = vertices[y][x + 1];\n                const v2 = vertices[y][x];\n                const v3 = vertices[y + 1][x];\n                const v4 = vertices[y + 1][x + 1];\n\n                idVertex2 = bufferize(v4, v2, v1, idVertex2);\n                idVertex2 = bufferize(v4, v3, v2, idVertex2);\n            }\n        }\n    }\n\n    const iStart = idVertex;\n\n    // TODO: WARNING beware skirt's size influences performance\n    // The size of the skirt is now a ratio of the size of the tile.\n    // To be perfect it should depend on the real elevation delta but too heavy to compute\n    if (!params.disableSkirt) {\n        // We compute the actual size of tile segment to use later for the skirt.\n        const segmentSize = new THREE.Vector3().fromArray(outBuffers.position.array).distanceTo(\n            new THREE.Vector3().fromArray(outBuffers.position.array, 3));\n\n        var buildIndexSkirt = function buildIndexSkirt() {};\n        var buildUVSkirt = function buildUVSkirt() {};\n\n        if (mustBuildIndexAndWGS84) {\n            buildIndexSkirt = function buildIndexSkirt(id, v1, v2, v3, v4) {\n                id = bufferize(v1, v2, v3, id);\n                id = bufferize(v1, v3, v4, id);\n                return id;\n            };\n\n            buildUVSkirt = function buildUVSkirt(id) {\n                outBuffers.uv.wgs84.array[idVertex * 2 + 0] = outBuffers.uv.wgs84.array[id * 2 + 0];\n                outBuffers.uv.wgs84.array[idVertex * 2 + 1] = outBuffers.uv.wgs84.array[id * 2 + 1];\n            };\n        }\n\n        for (let i = 0; i < skirt.length; i++) {\n            const id = skirt[i];\n            const id_m3 = idVertex * 3;\n            const id2_m3 = id * 3;\n\n            outBuffers.position.array[id_m3 + 0] = outBuffers.position.array[id2_m3 + 0]\n                - outBuffers.normal.array[id2_m3 + 0] * segmentSize;\n            outBuffers.position.array[id_m3 + 1] = outBuffers.position.array[id2_m3 + 1]\n                - outBuffers.normal.array[id2_m3 + 1] * segmentSize;\n            outBuffers.position.array[id_m3 + 2] = outBuffers.position.array[id2_m3 + 2]\n                - outBuffers.normal.array[id2_m3 + 2] * segmentSize;\n\n            outBuffers.normal.array[id_m3 + 0] = outBuffers.normal.array[id2_m3 + 0];\n            outBuffers.normal.array[id_m3 + 1] = outBuffers.normal.array[id2_m3 + 1];\n            outBuffers.normal.array[id_m3 + 2] = outBuffers.normal.array[id2_m3 + 2];\n\n            buildUVSkirt(id);\n\n            outBuffers.uv.pm.array[idVertex] = outBuffers.uv.pm.array[id];\n\n            const idf = (i + 1) % skirt.length;\n\n            const v1 = id;\n            const v2 = idVertex;\n            const v3 = (idf === 0) ? iStart : idVertex + 1;\n            const v4 = skirt[idf];\n\n            idVertex2 = buildIndexSkirt(idVertex2, v1, v2, v3, v4);\n\n            idVertex++;\n        }\n    }\n\n    return outBuffers;\n};\n\nexport default TileGeometry;\n"]}