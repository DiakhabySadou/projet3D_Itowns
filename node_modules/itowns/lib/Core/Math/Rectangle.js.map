{"version":3,"sources":["../../../src/Core/Math/Rectangle.js"],"names":["Rectangle","options","_west","west","_south","south","_east","east","_north","north","prototype","getWest","getSouth","getEast","getNorth","intersects","rect","containsPoint","v","Error","longitude","x","latitude","y"],"mappings":";;;;;AAAA;;;;;AAKA,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACxB,SAAKC,KAAL,GAAaD,QAAQE,IAAR,MAAkB,CAA/B;AACA,SAAKC,MAAL,GAAcH,QAAQI,KAAR,MAAmB,CAAjC;AACA,SAAKC,KAAL,GAAaL,QAAQM,IAAR,MAAkB,CAA/B;AACA,SAAKC,MAAL,GAAcP,QAAQQ,KAAR,MAAmB,CAAjC;AACH;;AAEDT,UAAUU,SAAV,CAAoBC,OAApB,GAA8B,YAAmB;AAC7C,WAAO,KAAKT,KAAZ;AACH,CAFD;;AAIAF,UAAUU,SAAV,CAAoBE,QAApB,GAA+B,YAAoB;AAC/C,WAAO,KAAKR,MAAZ;AACH,CAFD;;AAIAJ,UAAUU,SAAV,CAAoBG,OAApB,GAA8B,YAAmB;AAC7C,WAAO,KAAKP,KAAZ;AACH,CAFD;;AAIAN,UAAUU,SAAV,CAAoBI,QAApB,GAA+B,YAAoB;AAC/C,WAAO,KAAKN,MAAZ;AACH,CAFD;;AAIA;AACA;AACAR,UAAUU,SAAV,CAAoBK,UAApB,GAAiC,UAAoBC,IAApB,EAA0B;AACvD,QAAIA,KAAKH,OAAL,KAAiB,KAAKX,KAA1B,EAAiC,OAAO,KAAP;AACjC,QAAIc,KAAKL,OAAL,KAAiB,KAAKL,KAA1B,EAAiC,OAAO,KAAP;AACjC,QAAIU,KAAKF,QAAL,KAAkB,KAAKV,MAA3B,EAAmC,OAAO,KAAP;AACnC,QAAIY,KAAKJ,QAAL,KAAkB,KAAKJ,MAA3B,EAAmC,OAAO,KAAP;;AAEnC,WAAO,IAAP;AACH,CAPD;;AASAR,UAAUU,SAAV,CAAoBO,aAApB,GAAoC,UAAuBC,CAAvB,EAA0B;AAC1D,QAAI,CAACA,CAAL,EAAQ;AACJ,cAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAN;AACH;;AAED,QAAIC,YAAYF,EAAEG,CAAlB;AACA,QAAIC,WAAWJ,EAAEK,CAAjB;;AAEA,QAAIpB,OAAO,KAAKD,KAAhB;AACA,QAAIK,OAAO,KAAKD,KAAhB;;AAEA,WAAQc,YAAYjB,IAAb,IACHiB,YAAYb,IADT,IAEJe,YAAY,KAAKlB,MAFb,IAGJkB,YAAY,KAAKd,MAHpB;AAIH,CAfD;;kBAiBeR,S","file":"Rectangle.js","sourcesContent":["/**\n * Generated On: 2015-10-5\n * Class: Rectangle\n */\n\nfunction Rectangle(options) {\n    this._west = options.west() || 0;\n    this._south = options.south() || 0;\n    this._east = options.east() || 0;\n    this._north = options.north() || 0;\n}\n\nRectangle.prototype.getWest = function getWest() {\n    return this._west;\n};\n\nRectangle.prototype.getSouth = function getSouth() {\n    return this._south;\n};\n\nRectangle.prototype.getEast = function getEast() {\n    return this._east;\n};\n\nRectangle.prototype.getNorth = function getNorth() {\n    return this._north;\n};\n\n// if Right2 < Right1 && Left2 > Left1 && Top2 < Top1 && Bottom2 > Bottom1\n// this is correct only for coordinate positive\nRectangle.prototype.intersects = function intersects(rect) {\n    if (rect.getEast() < this._west) return false;\n    if (rect.getWest() > this._east) return false;\n    if (rect.getNorth() < this._south) return false;\n    if (rect.getSouth() > this._north) return false;\n\n    return true;\n};\n\nRectangle.prototype.containsPoint = function containsPoint(v) {\n    if (!v) {\n        throw new Error('point is required.');\n    }\n\n    var longitude = v.x;\n    var latitude = v.y;\n\n    var west = this._west;\n    var east = this._east;\n\n    return (longitude > west) &&\n       (longitude < east) &&\n       latitude >= this._south &&\n       latitude <= this._north;\n};\n\nexport default Rectangle;\n"]}