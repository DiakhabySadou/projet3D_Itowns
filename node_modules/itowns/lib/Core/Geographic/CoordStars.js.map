{"version":3,"sources":["../../../src/Core/Geographic/CoordStars.js"],"names":["CoordStars","getSunPosition","m","Math","PI","sin","cos","tan","asin","atan","atan2","rad","e","toJulian","date","valueOf","toDays","getRightAscension","l","b","getDeclination","getAzimuth","H","phi","dec","getAltitude","getSiderealTime","d","lw","getSolarMeanAnomaly","getEquationOfCenter","M","getEclipticLongitude","C","lat","lon","L","D","A","t","EclipticLongitude","declinaison","ascension","SiderealTime","altitude","azimuth","getSunPositionInScene","sun","dayMilliSec","longitude","coSunCarto","as","xyz"],"mappings":"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","file":"CoordStars.js","sourcesContent":["/**\n * Generated On: 2016-02-25\n * Class: CoordStars\n * Description: get coord of stars like earth...\n */\nimport Coordinates from './Coordinates';\n\nconst CoordStars = {\n\n    getSunPosition() {\n        const m = Math;\n        const PI = m.PI;\n        const sin = m.sin;\n        const cos = m.cos;\n        const tan = m.tan;\n        const asin = m.asin;\n        const atan = m.atan2;\n\n        const rad = PI / 180;\n        const dayMs = 1000 * 60 * 60 * 24;\n        const J1970 = 2440588;\n        const J2000 = 2451545;\n        const e = rad * 23.4397; // obliquity of the Earth\n\n        function toJulian(date) {\n            return date.valueOf() / dayMs - 0.5 + J1970;\n        }\n\n        function toDays(date) {\n            return toJulian(date) - J2000;\n        }\n\n        function getRightAscension(l, b) {\n            return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l));\n        }\n\n        function getDeclination(l, b) {\n            return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l));\n        }\n\n        function getAzimuth(H, phi, dec) {\n            return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi));\n        }\n\n        function getAltitude(H, phi, dec) {\n            return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H));\n        }\n\n        function getSiderealTime(d, lw) {\n            return rad * (280.16 + 360.9856235 * d) - lw;\n        }\n\n        function getSolarMeanAnomaly(d) {\n            return rad * (357.5291 + 0.98560028 * d);\n        }\n\n        function getEquationOfCenter(M) {\n            return rad * (1.9148 * sin(M) + 0.0200 * sin(2 * M) + 0.0003 * sin(3 * M));\n        }\n\n        function getEclipticLongitude(M, C) {\n            var P = rad * 102.9372; // perihelion of the Earth\n            return M + C + P + PI;\n        }\n\n        return function getSunPosition(date, lat, lon) {\n            const lw = rad * -lon;\n            const phi = rad * lat;\n            const d = toDays(date);\n            const M = getSolarMeanAnomaly(d);\n            const C = getEquationOfCenter(M);\n            const L = getEclipticLongitude(M, C);\n            const D = getDeclination(L, 0);\n            const A = getRightAscension(L, 0);\n            const t = getSiderealTime(d, lw);\n            const H = t - A;\n\n            return {\n                EclipticLongitude: L,\n                declinaison: D,\n                ascension: A,\n                H,\n                SiderealTime: t,\n                altitude: getAltitude(H, phi, D),\n                azimuth: getAzimuth(H, phi, D) + PI / 2, // + PI// - PI/2 // origin: north !!! not like original Mourner code but more classical ref\n            };\n        };\n    },\n\n    // Return scene coordinate ({x,y,z}) of sun\n    getSunPositionInScene(date, lat, lon) {\n        var sun = CoordStars.getSunPosition()(date, lat, lon);\n        var dayMilliSec = 24 * 3600000;\n        var longitude = sun.ascension + ((date % dayMilliSec) / dayMilliSec) * -360 + 180; // cause midday\n        var coSunCarto = new Coordinates('EPSG:4326', longitude, lat, 50000000)\n                                        .as('EPSG:4978').xyz();\n\n        return coSunCarto;\n    },\n\n\n};\n\nexport default CoordStars;\n"]}