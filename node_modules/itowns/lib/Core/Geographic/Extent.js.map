{"version":3,"sources":["../../../src/Core/Geographic/Extent.js"],"names":["THREE","projection","CARDINAL","WEST","EAST","SOUTH","NORTH","_isTiledCRS","crs","indexOf","Extent","values","_crs","length","_zoom","_row","_col","Error","get","set","z","r","c","_internalStorageUnit","_values","Float64Array","i","j","west","undefined","east","south","north","forEach","key","cardinal","prototype","clone","zoom","row","col","result","as","nbCol","Math","pow","size","nbRow","sizeRow","Yn","Ys","radToDeg","YToWGS84","cardinals","center","push","Infinity","max","min","offsetToParent","other","diffLevel","diff","invDiff","Vector4","dimension","x","abs","y","originX","originY","scaleX","scaleY","unit","target","call","dim","dimensions","isPointInside","coord","epsilon","longitude","latitude","isInside","o","offsetScale","bbox","intersectsExtent","intersect","union","extent","expandByPoint","coordinates","coords","we","sn"],"mappings":"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","file":"Extent.js","sourcesContent":["import * as THREE from 'three';\nimport Coordinates, { crsToUnit, crsIsGeographic, assertCrsIsValid, convertValueToUnit, reasonnableEpsilonForUnit } from '../Geographic/Coordinates';\nimport Projection from '../Geographic/Projection';\n\nconst projection = new Projection();\n/**\n * Extent is a SIG-area (so 2D)\n * It can use explicit coordinates (e.g: lon/lat) or implicit (WMTS coordinates)\n */\n\nconst CARDINAL = {\n    WEST: 0,\n    EAST: 1,\n    SOUTH: 2,\n    NORTH: 3,\n};\n\nfunction _isTiledCRS(crs) {\n    return crs.indexOf('WMTS:') == 0 ||\n        crs == 'TMS';\n}\n\nfunction Extent(crs, ...values) {\n    this._crs = crs;\n\n    if (_isTiledCRS(crs)) {\n        if (values.length == 3) {\n            this._zoom = values[0];\n            this._row = values[1];\n            this._col = values[2];\n\n            if (this._zoom < 0) {\n                throw new Error(`invlid WTMS values ${values}`);\n            }\n\n            Object.defineProperty(this,\n                'zoom',\n                { get: () => this._zoom },\n                { set: (z) => { this._zoom = z; } });\n            Object.defineProperty(this,\n                'row',\n                { get: () => this._row },\n                { set: (r) => { this._row = r; } });\n            Object.defineProperty(this,\n                'col',\n                { get: () => this._col },\n                { set: (c) => { this._col = c; } });\n        } else {\n            throw new Error(`Unsupported constructor args '${values}'`);\n        }\n    } else {\n        this._internalStorageUnit = crsToUnit(crs);\n\n        if (values.length === 2 &&\n            values[0] instanceof Coordinates &&\n            values[1] instanceof Coordinates) {\n            this._values = new Float64Array(4);\n            for (let i = 0; i < values.length; i++) {\n                for (let j = 0; j < 2; j++) {\n                    this._values[2 * i + j] = values[i]._values[j];\n                }\n            }\n        } else if (values.length == 1 && values[0].west != undefined) {\n            this._values = new Float64Array(4);\n            this._values[CARDINAL.WEST] = values[0].west;\n            this._values[CARDINAL.EAST] = values[0].east;\n            this._values[CARDINAL.SOUTH] = values[0].south;\n            this._values[CARDINAL.NORTH] = values[0].north;\n        } else if (values.length == 4) {\n            this._values = new Float64Array(4);\n            Object.keys(CARDINAL).forEach((key) => {\n                const cardinal = CARDINAL[key];\n                this._values[cardinal] = values[cardinal];\n            });\n        } else {\n            throw new Error(`Unsupported constructor args '${values}'`);\n        }\n    }\n}\n\nExtent.prototype.clone = function clone() {\n    if (_isTiledCRS(this._crs)) {\n        return new Extent(this._crs, this.zoom, this.row, this.col);\n    } else {\n        const result = new Extent(this._crs, ...this._values);\n        result._internalStorageUnit = this._internalStorageUnit;\n        return result;\n    }\n};\n\nExtent.prototype.as = function as(crs) {\n    assertCrsIsValid(crs);\n\n    if (_isTiledCRS(this._crs)) {\n        if (this._crs == 'WMTS:PM') {\n            // Convert this to the requested crs by using 4326 as an intermediate state.\n            const nbCol = Math.pow(2, this.zoom);\n            const size = 360 / nbCol;\n            // convert column PM to longitude EPSG:4326 degree\n            const west = 180 - size * (nbCol - this.col);\n            const east = 180 - size * (nbCol - (this.col + 1));\n            const nbRow = nbCol;\n            const sizeRow = 1.0 / nbRow;\n            // convert row PM to Y PM\n            const Yn = 1 - sizeRow * (nbRow - (this.row));\n            const Ys = 1 - sizeRow * (nbRow - (this.row + 1));\n            // convert Y PM to latitude EPSG:4326 degree\n            const north = THREE.Math.radToDeg(projection.YToWGS84(Yn));\n            const south = THREE.Math.radToDeg(projection.YToWGS84(Ys));\n            // create intermediate EPSG:4326 and convert in new crs\n            return new Extent('EPSG:4326', { west, east, south, north }).as(crs);\n        } else if (this._crs == 'WMTS:WGS84G' && crs == 'EPSG:4326') {\n            const nbRow = Math.pow(2, this.zoom);\n            const size = 180 / nbRow;\n            const north = size * (nbRow - this.row) - 90;\n            const south = size * (nbRow - (this.row + 1)) - 90;\n            const west = 180 - size * (2 * nbRow - this.col);\n            const east = 180 - size * (2 * nbRow - (this.col + 1));\n\n            return new Extent(crs, { west, east, south, north });\n        } else {\n            throw new Error('Unsupported yet');\n        }\n    }\n\n    if (this._crs != crs) {\n        // Compute min/max in x/y by projecting 8 cardinal points,\n        // and then taking the min/max of each coordinates.\n        const cardinals = [];\n        const c = this.center();\n        cardinals.push(new Coordinates(this._crs, this.west(), this.north()));\n        cardinals.push(new Coordinates(this._crs, c._values[0], this.north()));\n        cardinals.push(new Coordinates(this._crs, this.east(), this.north()));\n        cardinals.push(new Coordinates(this._crs, this.east(), c._values[1]));\n        cardinals.push(new Coordinates(this._crs, this.east(), this.south()));\n        cardinals.push(new Coordinates(this._crs, c._values[0], this.south()));\n        cardinals.push(new Coordinates(this._crs, this.west(), this.south()));\n        cardinals.push(new Coordinates(this._crs, this.west(), c._values[1]));\n\n        let north = -Infinity;\n        let south = Infinity;\n        let east = -Infinity;\n        let west = Infinity;\n        // loop over the coordinates\n        for (let i = 0; i < cardinals.length; i++) {\n            // add the internalStorageUnit to the coordinate.\n            cardinals[i]._internalStorageUnit = this._internalStorageUnit;\n            // convert the coordinate.\n            cardinals[i] = cardinals[i].as(crs);\n            north = Math.max(north, cardinals[i]._values[1]);\n            south = Math.min(south, cardinals[i]._values[1]);\n            east = Math.max(east, cardinals[i]._values[0]);\n            west = Math.min(west, cardinals[i]._values[0]);\n        }\n        return new Extent(crs, { north, south, east, west });\n    }\n\n    return this;\n};\n\nExtent.prototype.offsetToParent = function offsetToParent(other) {\n    if (this.crs() != other.crs()) {\n        throw new Error('unsupported mix');\n    }\n    if (_isTiledCRS(this.crs())) {\n        const diffLevel = this._zoom - other.zoom;\n        const diff = Math.pow(2, diffLevel);\n        const invDiff = 1 / diff;\n\n        const r = (this._row - (this._row % diff)) * invDiff;\n        const c = (this._col - (this._col % diff)) * invDiff;\n\n        return new THREE.Vector4(\n            this._col * invDiff - c,\n            this._row * invDiff - r,\n            invDiff, invDiff);\n    }\n\n    const dimension = {\n        x: Math.abs(other.east() - other.west()),\n        y: Math.abs(other.north() - other.south()),\n    };\n\n    const originX =\n        (this.west(other._internalStorageUnit) - other.west()) / dimension.x;\n    const originY =\n        (other.north() - this.north(other._internalStorageUnit)) / dimension.y;\n\n    const scaleX =\n        Math.abs(\n            this.east(other._internalStorageUnit) - this.west(other._internalStorageUnit)) / dimension.x;\n\n    const scaleY =\n        Math.abs(\n            this.north(other._internalStorageUnit) - this.south(other._internalStorageUnit)) / dimension.y;\n\n    return new THREE.Vector4(originX, originY, scaleX, scaleY);\n};\n\nExtent.prototype.west = function west(unit) {\n    if (crsIsGeographic(this.crs())) {\n        return convertValueToUnit(this._internalStorageUnit, unit, this._values[0]);\n    } else {\n        return this._values[CARDINAL.WEST];\n    }\n};\n\nExtent.prototype.east = function east(unit) {\n    if (crsIsGeographic(this.crs())) {\n        return convertValueToUnit(this._internalStorageUnit, unit, this._values[1]);\n    } else {\n        return this._values[CARDINAL.EAST];\n    }\n};\n\nExtent.prototype.north = function north(unit) {\n    if (crsIsGeographic(this.crs())) {\n        return convertValueToUnit(this._internalStorageUnit, unit, this._values[3]);\n    } else {\n        return this._values[CARDINAL.NORTH];\n    }\n};\n\nExtent.prototype.south = function south(unit) {\n    if (crsIsGeographic(this.crs())) {\n        return convertValueToUnit(this._internalStorageUnit, unit, this._values[2]);\n    } else {\n        return this._values[CARDINAL.SOUTH];\n    }\n};\n\nExtent.prototype.crs = function crs() {\n    return this._crs;\n};\n\nExtent.prototype.center = function center(target) {\n    if (_isTiledCRS(this._crs)) {\n        throw new Error('Invalid operation for WMTS bbox');\n    }\n    let c;\n    if (target) {\n        Coordinates.call(target, this._crs, this._values[0], this._values[2]);\n        c = target;\n    } else {\n        c = new Coordinates(this._crs, this._values[0], this._values[2]);\n    }\n    c._internalStorageUnit = this._internalStorageUnit;\n    const dim = this.dimensions();\n    c._values[0] += dim.x * 0.5;\n    c._values[1] += dim.y * 0.5;\n    return c;\n};\n\nExtent.prototype.dimensions = function dimensions(unit) {\n    return {\n        x: Math.abs(this.east(unit) - this.west(unit)),\n        y: Math.abs(this.north(unit) - this.south(unit)),\n    };\n};\n\n/**\n * Return true if coord is inside the bounding box.\n *\n * @param {Coordinates} coord\n * @param {number} epsilon coord is inside the extent (+/- epsilon)\n * @return {boolean}\n */\nExtent.prototype.isPointInside = function isPointInside(coord, epsilon = 0) {\n    const c = (this.crs() == coord.crs) ? coord : coord.as(this.crs());\n    // TODO this ignores altitude\n    if (crsIsGeographic(this.crs())) {\n        return c.longitude(this._internalStorageUnit) <= this.east() + epsilon &&\n               c.longitude(this._internalStorageUnit) >= this.west() - epsilon &&\n               c.latitude(this._internalStorageUnit) <= this.north() + epsilon &&\n               c.latitude(this._internalStorageUnit) >= this.south() - epsilon;\n    } else {\n        return c.x() <= this.east() + epsilon &&\n               c.x() >= this.west() - epsilon &&\n               c.y() <= this.north() + epsilon &&\n               c.y() >= this.south() - epsilon;\n    }\n};\n\nExtent.prototype.isInside = function isInside(other, epsilon) {\n    if (_isTiledCRS(this.crs())) {\n        if (this._zoom == other._zoom) {\n            return this._row == other._row &&\n                this._col == other._col;\n        } else if (this._zoom < other._zoom) {\n            return false;\n        } else {\n            const diffLevel = this._zoom - other._zoom;\n            const diff = Math.pow(2, diffLevel);\n            const invDiff = 1 / diff;\n\n            const r = (this._row - (this._row % diff)) * invDiff;\n            const c = (this._col - (this._col % diff)) * invDiff;\n            return r == other._row && c == other._col;\n        }\n    } else {\n        const o = other.as(this._crs);\n        epsilon = epsilon == undefined ? reasonnableEpsilonForUnit(o._internalStorageUnit) : epsilon;\n        // compare use crs' default storage unit\n        return this.east(o._internalStorageUnit) - o.east() <= epsilon &&\n               o.west() - this.west(o._internalStorageUnit) <= epsilon &&\n               this.north(o._internalStorageUnit) - o.north() <= epsilon &&\n               o.south() - this.south(o._internalStorageUnit) <= epsilon;\n    }\n};\n\nExtent.prototype.offsetScale = function offsetScale(bbox) {\n    if (bbox.crs() != this.crs()) {\n        throw new Error('unsupported offscale between 2 diff crs');\n    }\n\n    const dimension = {\n        x: Math.abs(this.east() - this.west()),\n        y: Math.abs(this.north() - this.south()),\n    };\n\n    var originX = (bbox.west(this._internalStorageUnit) - this.west()) / dimension.x;\n    var originY = (bbox.north(this._internalStorageUnit) - this.north()) / dimension.y;\n\n    var scaleX = Math.abs(bbox.east(this._internalStorageUnit) - bbox.west(this._internalStorageUnit)) / dimension.x;\n    var scaleY = Math.abs(bbox.north(this._internalStorageUnit) - bbox.south(this._internalStorageUnit)) / dimension.y;\n\n    return new THREE.Vector4(originX, originY, scaleX, scaleY);\n};\n\n/**\n * @documentation: Return true if this bounding box intersect with the bouding box parameter\n * @param {type} bbox\n * @returns {Boolean}\n */\nExtent.prototype.intersectsExtent = function intersectsExtent(bbox) {\n    const other = bbox.as(this.crs());\n    return !(this.west() >= other.east(this._internalStorageUnit) ||\n             this.east() <= other.west(this._internalStorageUnit) ||\n             this.south() >= other.north(this._internalStorageUnit) ||\n             this.north() <= other.south(this._internalStorageUnit));\n};\n\n/**\n * @documentation: Return the intersection of this extent with another one\n * @param {type} other\n * @returns {Boolean}\n */\nExtent.prototype.intersect = function intersect(other) {\n    if (!this.intersectsExtent(other)) {\n        return new Extent(this.crs(), 0, 0, 0, 0);\n    }\n    return new Extent(this.crs(),\n        Math.max(this.west(), other.west(this._internalStorageUnit)),\n        Math.min(this.east(), other.east(this._internalStorageUnit)),\n        Math.max(this.south(), other.south(this._internalStorageUnit)),\n        Math.min(this.north(), other.north(this._internalStorageUnit)));\n};\n\n\nExtent.prototype.set = function set(west, east, south, north) {\n    this._values[CARDINAL.WEST] = west;\n    this._values[CARDINAL.EAST] = east;\n    this._values[CARDINAL.SOUTH] = south;\n    this._values[CARDINAL.NORTH] = north;\n};\n\nExtent.prototype.union = function union(extent) {\n    if (extent.crs() != this.crs()) {\n        throw new Error('unsupported union between 2 diff crs');\n    }\n    const west = extent.west(this._internalStorageUnit);\n    if (west < this.west()) {\n        this._values[CARDINAL.WEST] = west;\n    }\n\n    const east = extent.east(this._internalStorageUnit);\n    if (east > this.east()) {\n        this._values[CARDINAL.EAST] = east;\n    }\n\n    const south = extent.south(this._internalStorageUnit);\n    if (south < this.south()) {\n        this._values[CARDINAL.SOUTH] = south;\n    }\n\n    const north = extent.north(this._internalStorageUnit);\n    if (north > this.north()) {\n        this._values[CARDINAL.NORTH] = north;\n    }\n};\n\n/**\n * expandByPoint perfoms the minimal extension\n * for the point to belong to this Extent object\n * @param {Coordinates} coordinates  The coordinates to belong\n */\nExtent.prototype.expandByPoint = function expandByPoint(coordinates) {\n    const coords = coordinates.as(this.crs());\n    const unit = coords._internalStorageUnit;\n    const we = convertValueToUnit(unit, this._internalStorageUnit, coords._values[0]);\n    if (we < this.west()) {\n        this._values[CARDINAL.WEST] = we;\n    }\n    if (we > this.east()) {\n        this._values[CARDINAL.EAST] = we;\n    }\n    const sn = convertValueToUnit(unit, this._internalStorageUnit, coords._values[1]);\n    if (sn < this.south()) {\n        this._values[CARDINAL.SOUTH] = sn;\n    }\n    if (sn > this.north()) {\n        this._values[CARDINAL.NORTH] = sn;\n    }\n};\n\nexport default Extent;\n"]}