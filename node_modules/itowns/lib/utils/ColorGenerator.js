'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// from https://stackoverflow.com/a/4382138/1528985
var kellyColorsHex = [0xFFB300, // Vivid Yellow
0x803E75, // Strong Purple
0xFF6800, // Vivid Orange
0xA6BDD7, // Very Light Blue
0xC10020, // Vivid Red
0xCEA262, // Grayish Yellow
0x817066, // Medium Gray

// The following don't work well for people with defective color vision
0x007D34, // Vivid Green
0xF6768E, // Strong Purplish Pink
0x00538A, // Strong Blue
0xFF7A5C, // Strong Yellowish Pink
0x53377A, // Strong Violet
0xFF8E00, // Vivid Orange Yellow
0xB32851, // Strong Purplish Red
0xF4C800, // Vivid Greenish Yellow
0x7F180D, // Strong Reddish Brown
0x93AA00, // Vivid Yellowish Green
0x593315, // Deep Yellowish Brown
0xF13A13, // Vivid Reddish Orange
0x232C16];

var ColorGenerator = function () {
    function ColorGenerator() {
        var startIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
        (0, _classCallCheck3.default)(this, ColorGenerator);

        var colorIndex = startIdx;

        this.getNextColor = function () {
            var currentColor = kellyColorsHex[colorIndex % kellyColorsHex.length];
            colorIndex++;
            if (colorIndex === startIdx) {
                console.warn('Not enough color, reusing old ones');
            }
            return currentColor;
        };
    }

    (0, _createClass3.default)(ColorGenerator, null, [{
        key: 'asHtmlColorString',
        value: function asHtmlColorString(color) {
            if (typeof color === 'number') {
                // make sure our hexadecimal number is padded out
                color = '#' + ('00000' + (color | 0).toString(16)).substr(-6);
            }
            return color;
        }
    }]);
    return ColorGenerator;
}();

exports.default = ColorGenerator;