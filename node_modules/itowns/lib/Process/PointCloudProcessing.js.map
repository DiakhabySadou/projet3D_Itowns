{"version":3,"sources":["../../src/Process/PointCloudProcessing.js"],"names":["THREE","cube","size","h","clone","multiplyScalar","geometry","Geometry","vertices","push","Vector3","x","y","z","computeLineDistances","temp","points","box3","Box3","matrix4","Matrix4","box3SurfaceOnScreen","camera","box3d","matrixWorld","isEmpty","copy","multiplyMatrices","_viewMatrix","set","min","applyMatrix4","max","pt","width","height","indices","map","v","contour","i","area","ShapeUtils","Math","abs","initBoundingBox","elt","layer","tightbbox","getSize","obj","boxHelper","LineSegments","childrenBitField","LineDashedMaterial","color","dashSize","gapSize","LineBasicMaterial","frustumCulled","position","add","updateMatrixWorld","autoUpdateMatrix","material","linewidth","layers","mask","bboxes","shouldDisplayNode","context","shouldBeLoaded","octreeDepthLimit","name","length","surfaceOnScreen","numPoints","cl","bbox","visible","isBox3Visible","object3d","containsPoint","camera3D","density","threshold1","threshold2","markForDeletion","notVisibleSince","Date","now","children","child","preUpdate","counters","pointCount","displayedCount","root","update","undefined","setDrawRange","floor","attributes","count","realPointCount","uniforms","value","pointSize","promise","scheduler","execute","requester","view","priority","redraw","isLeaf","earlyDropFunction","cmd","then","pts","onPointsCreated","group","owner","err","postUpdate","pointBudget","reduction","drawRange","splice","dispose","selectAt","mouse","scene","traverse","o","isPoints","baseId","enablePicking","buffer","mainLoop","gfxEngine","renderViewTobuffer","fullSizeRenderTarget","objId","index","result"],"mappings":"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","file":"PointCloudProcessing.js","sourcesContent":["import * as THREE from 'three';\nimport convexHull from 'monotone-convex-hull-2d';\nimport CancelledCommandException from '../Core/Scheduler/CancelledCommandException';\n\n// Draw a cube with lines (12 lines).\nfunction cube(size) {\n    var h = size.clone().multiplyScalar(0.5);\n    var geometry = new THREE.Geometry();\n    geometry.vertices.push(\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, -h.y, -h.z),\n        new THREE.Vector3(-h.x, -h.y, h.z),\n        new THREE.Vector3(-h.x, h.y, -h.z),\n        new THREE.Vector3(-h.x, h.y, h.z),\n        new THREE.Vector3(h.x, h.y, -h.z),\n        new THREE.Vector3(h.x, h.y, h.z),\n        new THREE.Vector3(h.x, -h.y, -h.z),\n        new THREE.Vector3(h.x, -h.y, h.z));\n    geometry.computeLineDistances();\n    return geometry;\n}\n\n// TODO: move this function to Camera, as soon as it's good enough (see https://github.com/iTowns/itowns/pull/381#pullrequestreview-49107682)\nconst temp = {\n    points: [\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n        new THREE.Vector3(),\n    ],\n    box3: new THREE.Box3(),\n    matrix4: new THREE.Matrix4(),\n};\nfunction box3SurfaceOnScreen(camera, box3d, matrixWorld) {\n    if (box3d.isEmpty()) {\n        return 0;\n    }\n\n    temp.box3.copy(box3d);\n    if (matrixWorld) {\n        temp.matrix4.multiplyMatrices(camera._viewMatrix, matrixWorld);\n    } else {\n        temp.matrix4.copy(camera._viewMatrix);\n    }\n\n    // copy pasted / adapted from Box3.applyMatrix4\n    // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n    temp.points[0].set(temp.box3.min.x, temp.box3.min.y, temp.box3.min.z).applyMatrix4(temp.matrix4); // 000\n    temp.points[1].set(temp.box3.min.x, temp.box3.min.y, temp.box3.max.z).applyMatrix4(temp.matrix4); // 001\n    temp.points[2].set(temp.box3.min.x, temp.box3.max.y, temp.box3.min.z).applyMatrix4(temp.matrix4); // 010\n    temp.points[3].set(temp.box3.min.x, temp.box3.max.y, temp.box3.max.z).applyMatrix4(temp.matrix4); // 011\n    temp.points[4].set(temp.box3.max.x, temp.box3.min.y, temp.box3.min.z).applyMatrix4(temp.matrix4); // 100\n    temp.points[5].set(temp.box3.max.x, temp.box3.min.y, temp.box3.max.z).applyMatrix4(temp.matrix4); // 101\n    temp.points[6].set(temp.box3.max.x, temp.box3.max.y, temp.box3.min.z).applyMatrix4(temp.matrix4); // 110\n    temp.points[7].set(temp.box3.max.x, temp.box3.max.y, temp.box3.max.z).applyMatrix4(temp.matrix4); // 111\n\n    for (const pt of temp.points) {\n        // translate/scale to [0, width]x[0, height]\n        pt.x = camera.width * (pt.x + 1) * 0.5;\n        pt.y = camera.height * (1 - pt.y) * 0.5;\n        pt.z = 0;\n    }\n\n    const indices = convexHull(temp.points.map(v => [v.x, v.y]));\n    const contour = indices.map(i => temp.points[i]);\n\n    const area = THREE.ShapeUtils.area(contour);\n\n    return Math.abs(area);\n}\n\nfunction initBoundingBox(elt, layer) {\n    const size = elt.tightbbox.getSize();\n    elt.obj.boxHelper = new THREE.LineSegments(\n        cube(size),\n        elt.childrenBitField ?\n            new THREE.LineDashedMaterial({ color: 0, dashSize: 0.25, gapSize: 0.25 }) : new THREE.LineBasicMaterial({ color: 0 }));\n\n    elt.obj.boxHelper.frustumCulled = false;\n    elt.obj.boxHelper.position.copy(elt.tightbbox.min);\n    elt.obj.boxHelper.position.add(size.multiplyScalar(0.5));\n    elt.obj.boxHelper.updateMatrixWorld(true);\n    elt.obj.boxHelper.autoUpdateMatrix = false;\n    elt.obj.boxHelper.material.linewidth = 2;\n    elt.obj.boxHelper.layers.mask = layer.bboxes.layers.mask;\n    layer.bboxes.add(elt.obj.boxHelper);\n    elt.obj.boxHelper.updateMatrixWorld();\n}\n\nfunction shouldDisplayNode(context, layer, elt) {\n    let shouldBeLoaded = 0;\n\n    if (layer.octreeDepthLimit >= 0 && layer.octreeDepthLimit < elt.name.length) {\n        return { shouldBeLoaded, surfaceOnScreen: 0 };\n    }\n\n    const numPoints = elt.numPoints;\n\n    const cl = (elt.tightbbox ? elt.tightbbox : elt.bbox);\n\n    const visible = context.camera.isBox3Visible(cl, layer.object3d.matrixWorld);\n    const surfaceOnScreen = 0;\n\n    if (visible) {\n        if (cl.containsPoint(context.camera.camera3D.position)) {\n            shouldBeLoaded = 1;\n        } else {\n            const surfaceOnScreen = box3SurfaceOnScreen(context.camera, cl, layer.object3d.matrixWorld);\n\n\n            const density = numPoints / surfaceOnScreen;\n            // elements with density < threshold1 are displayed...\n            const threshold1 = 0.15; // layer.densityThreshold.min;\n            // elements with density > threshold2 aren't displayed\n            const threshold2 = 0.5; // layer.densityThreshold.max;\n\n            if (density <= threshold1) {\n                shouldBeLoaded = 1;\n            } else if (density > threshold2) {\n                shouldBeLoaded = 0;\n            } else {\n                shouldBeLoaded = (density - threshold1) / (threshold2 - threshold1);\n            }\n\n            /*\n            // no point indicates shallow hierarchy, so we definitely want to load its children\n            if (numPoints == 0) {\n                shouldBeLoaded = 1;\n            } else {\n                const count = layer.overdraw * (surfaceOnScreen / Math.pow(layer.pointSize, 2));\n                shouldBeLoaded = Math.min(count / numPoints, 1);\n            }\n            */\n\n            elt.surfaceOnScreen = surfaceOnScreen;\n        }\n    } else {\n        shouldBeLoaded = -1;\n    }\n\n    return { shouldBeLoaded, surfaceOnScreen };\n}\n\nfunction markForDeletion(elt) {\n    if (elt.obj) {\n        elt.obj.material.visible = false;\n        if (__DEBUG__) {\n            if (elt.obj.boxHelper) {\n                elt.obj.boxHelper.material.visible = false;\n            }\n        }\n    }\n\n    if (!elt.notVisibleSince) {\n        elt.notVisibleSince = Date.now();\n        elt.shouldBeLoaded = -1;\n    }\n    for (const child of elt.children) {\n        markForDeletion(child);\n    }\n}\n\nexport default {\n    preUpdate(context, layer) {\n        // TODO: use changeSource\n        layer.counters = {\n            pointCount: 0,\n            displayedCount: 0,\n        };\n\n        // Bail-out if not ready\n        if (!layer.root) {\n            return [];\n        }\n\n        // Start updating from hierarchy root\n        return [layer.root];\n    },\n\n    update(context, layer, elt) {\n        const { shouldBeLoaded } = shouldDisplayNode(context, layer, elt);\n\n        elt.shouldBeLoaded = shouldBeLoaded;\n\n        if (shouldBeLoaded > 0) {\n            elt.notVisibleSince = undefined;\n\n            // only load geometry if this elements has points\n            if (elt.numPoints > 0) {\n                if (elt.obj) {\n                    elt.obj.material.visible = true;\n                    if (__DEBUG__) {\n                        elt.obj.material.uniforms.density.value = elt.density;\n\n                        if (layer.bboxes.visible) {\n                            if (!elt.obj.boxHelper) {\n                                initBoundingBox(elt, layer);\n                            }\n                            elt.obj.boxHelper.visible = true;\n                            elt.obj.boxHelper.material.color.r = 1 - shouldBeLoaded;\n                            elt.obj.boxHelper.material.color.g = shouldBeLoaded;\n                        }\n                    }\n\n                    elt.obj.geometry.setDrawRange(\n                        0, Math.floor(shouldBeLoaded * elt.obj.geometry.attributes.position.count));\n                    layer.counters.pointCount += elt.obj.realPointCount;\n                    layer.counters.displayedCount += Math.floor(shouldBeLoaded * elt.obj.geometry.attributes.position.count);\n                    elt.obj.material.uniforms.size.value = layer.pointSize;\n                } else if (!elt.promise) {\n                    // TODO:\n                    // - add command cancelation support\n                    // - rework priority\n                    elt.promise = context.scheduler.execute({\n                        layer,\n                        requester: elt,\n                        view: context.view,\n                        priority: shouldBeLoaded,\n                        redraw: true,\n                        isLeaf: elt.childrenBitField == 0,\n                        earlyDropFunction: cmd => cmd.requester.shouldBeLoaded <= 0,\n                    }).then((pts) => {\n                        if (layer.onPointsCreated) {\n                            layer.onPointsCreated(layer, pts);\n                        }\n\n                        elt.obj = pts;\n                        // store tightbbox to avoid ping-pong (bbox = larger => visible, tight => invisible)\n                        elt.tightbbox = pts.tightbbox;\n                        pts.geometry.setDrawRange(\n                            0, shouldBeLoaded * pts.geometry.attributes.position.count);\n\n                        // make sure to add it here, otherwise it might never\n                        // be added nor cleaned\n                        layer.group.add(elt.obj);\n                        elt.obj.updateMatrixWorld(true);\n\n                        elt.obj.owner = elt;\n                        elt.promise = null;\n                    }, (err) => {\n                        if (err instanceof CancelledCommandException) {\n                            elt.promise = null;\n                        }\n                    });\n                }\n            }\n        } else {\n            // not visible / displayed\n            markForDeletion(elt);\n        }\n\n        if (shouldBeLoaded >= 0.9 && elt.children && elt.children.length) {\n            return elt.children;\n        }\n        return undefined;\n    },\n\n    postUpdate(context, layer) {\n        if (!layer.group) {\n            return;\n        }\n\n        if (layer.counters.displayedCount > layer.pointBudget) {\n            const reduction = layer.pointBudget / layer.counters.displayedCount;\n            for (const pts of layer.group.children) {\n                if (pts.material.visible) {\n                    pts.geometry.setDrawRange(0, pts.geometry.drawRange.count * reduction);\n                }\n            }\n            layer.counters.displayedCount *= reduction;\n        }\n\n        const now = Date.now();\n\n        for (let i = layer.group.children.length - 1; i >= 0; i--) {\n            const obj = layer.group.children[i];\n            if (!obj.material.visible && (now - obj.owner.notVisibleSince) > 10000) {\n                // remove from group\n                layer.group.children.splice(i, 1);\n\n                obj.material.dispose();\n                obj.geometry.dispose();\n                obj.material = null;\n                obj.geometry = null;\n                obj.owner.obj = null;\n\n                if (__DEBUG__) {\n                    if (obj.boxHelper) {\n                        obj.boxHelper.removeMe = true;\n                        obj.boxHelper.material.dispose();\n                        obj.boxHelper.geometry.dispose();\n                    }\n                }\n            }\n        }\n\n        if (__DEBUG__) {\n            layer.bboxes.children = layer.bboxes.children.filter(b => !b.removeMe);\n        }\n    },\n\n    selectAt(view, layer, mouse) {\n        if (!layer.root) {\n            return;\n        }\n\n        // enable picking mode for points material\n        view.scene.traverse((o) => {\n            if (o.isPoints && o.baseId) {\n                o.material.enablePicking(true);\n            }\n        });\n\n        // render 1 pixel\n        // TODO: support more than 1 pixel selection\n        const buffer = view.mainLoop.gfxEngine.renderViewTobuffer(\n                view, view.mainLoop.gfxEngine.fullSizeRenderTarget,\n                mouse.x, mouse.y, 1, 1);\n\n        // see PointCloudProvider and the construction of unique_id\n        const objId = (buffer[0] << 8) | buffer[1];\n        const index = (buffer[2] << 8) | buffer[3];\n\n        let result;\n        view.scene.traverse((o) => {\n            if (o.isPoints && o.baseId) {\n                // disable picking mode\n                o.material.enablePicking(false);\n\n                // if baseId matches objId, the clicked point belongs to `o`\n                if (!result && o.baseId === objId) {\n                    result = {\n                        points: o,\n                        index,\n                    };\n                }\n            }\n        });\n\n        return result;\n    },\n};\n"]}