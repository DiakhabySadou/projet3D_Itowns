{"version":3,"sources":["../../../src/Renderer/ThreeExtended/GLTFLoader.js"],"names":["THREE","GLTFLoader","manager","undefined","DefaultLoadingManager","prototype","constructor","load","url","onLoad","onProgress","onError","scope","path","Loader","extractUrlBase","loader","FileLoader","setResponseType","data","parse","setCrossOrigin","value","crossOrigin","setPath","callback","content","extensions","magic","convertUint8ArrayToString","Uint8Array","BINARY_EXTENSION_HEADER_DEFAULTS","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","extensionsUsed","indexOf","KHR_MATERIALS_COMMON","GLTFMaterialsCommonExtension","parser","GLTFParser","scene","scenes","cameras","animations","GLTFRegistry","objects","get","key","add","object","remove","removeAll","update","camera","name","Shaders","console","warn","GLTFShader","targetNode","allNodes","boundUniforms","uniforms","material","uniformId","uniform","semantic","sourceNodeRef","node","sourceNode","_m4","Matrix4","boundUniform","m4","multiplyMatrices","matrixWorldInverse","matrixWorld","m3","getNormalMatrix","copy","projectionMatrix","m4v","mi","length","getInverse","multiply","skeleton","bones","boneInverses","bindMatrix","Animations","lights","extension","lightId","light","lightNode","lightParams","type","color","Color","fromArray","DirectionalLight","position","set","PointLight","SpotLight","AmbientLight","version","contentFormat","BINARY_EXTENSION_HEADER_LENGTH","headerView","DataView","header","slice","getUint32","contentLength","Error","contentArray","body","loadShader","shader","bufferViews","bufferView","array","loadTextureSourceUri","source","metadata","stringData","mimeType","btoa","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","TRIANGLES","LINES","LINE_LOOP","LINE_STRIP","UNSIGNED_BYTE","UNSIGNED_SHORT","VERTEX_SHADER","FRAGMENT_SHADER","WEBGL_TYPE","Number","Matrix3","Vector2","Vector3","Vector4","Texture","WEBGL_COMPONENT_TYPES","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipMapNearestFilter","LinearMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TEXTURE_FORMATS","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","WEBGL_TEXTURE_DATATYPES","UnsignedByteType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","WEBGL_SIDES","BackSide","FrontSide","WEBGL_DEPTH_FUNCS","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","WEBGL_BLEND_EQUATIONS","AddEquation","SubtractEquation","ReverseSubtractEquation","WEBGL_BLEND_FUNCS","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","WEBGL_TYPE_SIZES","PATH_PROPERTIES","scale","translation","rotation","INTERPOLATION","InterpolateLinear","STEP","InterpolateDiscrete","STATES_ENABLES","_each","thisObj","resolve","results","fns","Object","toString","call","idx","push","then","bind","hasOwnProperty","all","resolveURL","test","window","TextDecoder","s","i","il","String","fromCharCode","replaceTHREEShaderAttributes","shaderText","technique","attributes","attributeId","pname","param","parameters","atype","shaderParams","shaderAttributes","params","shaderParam","regEx","RegExp","replace","createDefaultMaterial","MeshPhongMaterial","emissive","specular","shininess","transparent","depthTest","side","DeferredShaderMaterial","isDeferredShaderMaterial","create","UniformsUtils","clone","originalUniform","needsUpdate","RawShaderMaterial","options","cache","_withDependencies","dependencies","_dependencies","dependency","fnName","charAt","toUpperCase","cached","fn","loadShaders","shaders","uri","loadBuffers","buffers","buffer","loadBufferViews","arraybuffer","byteLength","byteOffset","loadAccessors","accessors","accessor","itemSize","TypedArray","componentType","elementBytes","BYTES_PER_ELEMENT","byteStride","ib","InterleavedBuffer","InterleavedBufferAttribute","count","BufferAttribute","loadTextures","textures","texture","images","sourceUri","textureLoader","Handlers","TextureLoader","_texture","flipY","format","internalFormat","sampler","samplers","magFilter","minFilter","wrapS","wrapT","loadMaterials","materials","materialType","materialValues","materialParams","khr_material","keys","MeshLambertMaterial","MeshBasicMaterial","forEach","v","values","doubleSided","DoubleSide","opacity","transparency","techniques","program","programs","fragmentShader","vertexShader","ptype","pcount","uvalue","usemantic","unode","FLOAT_MAT2","Array","states","enables","enable","functions","enableCullFace","enableDepthTest","enableBlend","cullFace","depthFunc","depthWrite","depthMask","blending","CustomBlending","NoBlending","blendEquationSeparate","blendEquation","blendEquationAlpha","blendFuncSeparate","blendSrc","blendDst","blendSrcAlpha","blendDstAlpha","isArray","diffuse","map","reflective","envMap","bump","bumpMap","emission","emissiveMap","specularMap","_material","loadMeshes","meshes","mesh","group","Group","extras","userData","primitives","primitive","mode","geometry","BufferGeometry","attributeEntry","bufferAttribute","addAttribute","indices","setIndex","meshNode","Mesh","castShadow","LineSegments","LineLoop","Line","loadCameras","perspective","yfov","aspectRatio","_camera","PerspectiveCamera","Math","radToDeg","znear","zfar","orthographic","OrthographicCamera","innerWidth","innerHeight","loadSkins","skins","skin","bindShapeMatrix","_skin","jointNames","inverseBindMatrices","loadAnimations","animation","animationId","tracks","channelId","channels","channel","target","id","input","output","inputAccessor","outputAccessor","nodes","updateMatrix","matrixAutoUpdate","TypedKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","uuid","interpolation","AnimationUtils","arraySlice","AnimationClip","loadNodes","matrix","_node","jointName","Bone","Object3D","applyMatrix","quaternion","__nodes","nodeId","meshId","childrenId","children","child","originalMaterial","originalGeometry","originalUserData","originalName","skinEntry","getJointNode","jointId","n","skinning","SkinnedMesh","l","jointNode","m","mat","Skeleton","buildBoneGraph","parentJson","parentObject","property","bone","boneJson","isBone","extensionLights","loadScenes","buildNodeHierachy","_scene","Scene","traverse","isRawShaderMaterial","gltfShader","onBeforeRender","renderer"],"mappings":"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","file":"GLTFLoader.js","sourcesContent":["// This file is copy pasted from THREE\n/* CUSTOM ITOWNS */\n/* Add the extention _BATCHID */\n/* eslint-disable */\nimport * as THREE from 'three';\n/* END CUSTOM ITOWNS */\n\n/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n */\n\nexport default (function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = this.path && ( typeof this.path === \"string\" ) ? this.path : THREE.Loader.prototype.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\tscope.parse( data, onLoad, path );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\n\t\t},\n\n\t\tparse: function ( data, callback, path ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tvar magic = convertUint8ArrayToString( new Uint8Array( data, 0, 4 ) );\n\n\t\t\tif ( magic === BINARY_EXTENSION_HEADER_DEFAULTS.magic ) {\n\n\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t} else {\n\n\t\t\t\tcontent = convertUint8ArrayToString( new Uint8Array( data ) );\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.extensionsUsed && json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_COMMON ) >= 0 ) {\n\n\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] = new GLTFMaterialsCommonExtension( json );\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.path,\n\t\t\t\tcrossOrigin: this.crossOrigin\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations ) {\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\t\"scene\": scene,\n\t\t\t\t\t\"scenes\": scenes,\n\t\t\t\t\t\"cameras\": cameras,\n\t\t\t\t\t\"animations\": animations\n\t\t\t\t};\n\n\t\t\t\tcallback( glTF );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t},\n\n\t\t\tupdate: function ( scene, camera ) {\n\n\t\t\t\tfor ( var name in objects ) {\n\n\t\t\t\t\tvar object = objects[ name ];\n\n\t\t\t\t\tif ( object.update ) {\n\n\t\t\t\t\t\tobject.update( scene, camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/* GLTFSHADERS */\n\n\tGLTFLoader.Shaders = {\n\n\t\tupdate: function () {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader.Shaders has been deprecated, and now updates automatically.' );\n\n\t\t}\n\n\t};\n\n\t/* GLTFSHADER */\n\n\tfunction GLTFShader( targetNode, allNodes ) {\n\n\t\tvar boundUniforms = {};\n\n\t\t// bind each uniform to its source node\n\n\t\tvar uniforms = targetNode.material.uniforms;\n\n\t\tfor ( var uniformId in uniforms ) {\n\n\t\t\tvar uniform = uniforms[ uniformId ];\n\n\t\t\tif ( uniform.semantic ) {\n\n\t\t\t\tvar sourceNodeRef = uniform.node;\n\n\t\t\t\tvar sourceNode = targetNode;\n\n\t\t\t\tif ( sourceNodeRef ) {\n\n\t\t\t\t\tsourceNode = allNodes[ sourceNodeRef ];\n\n\t\t\t\t}\n\n\t\t\t\tboundUniforms[ uniformId ] = {\n\t\t\t\t\tsemantic: uniform.semantic,\n\t\t\t\t\tsourceNode: sourceNode,\n\t\t\t\t\ttargetNode: targetNode,\n\t\t\t\t\tuniform: uniform\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.boundUniforms = boundUniforms;\n\t\tthis._m4 = new THREE.Matrix4();\n\n\t}\n\n\t// Update - update all the uniform values\n\tGLTFShader.prototype.update = function ( scene, camera ) {\n\n\t\tvar boundUniforms = this.boundUniforms;\n\n\t\tfor ( var name in boundUniforms ) {\n\n\t\t\tvar boundUniform = boundUniforms[ name ];\n\n\t\t\tswitch ( boundUniform.semantic ) {\n\n\t\t\t\tcase \"MODELVIEW\":\n\n\t\t\t\t\tvar m4 = boundUniform.uniform.value;\n\t\t\t\t\tm4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MODELVIEWINVERSETRANSPOSE\":\n\n\t\t\t\t\tvar m3 = boundUniform.uniform.value;\n\t\t\t\t\tthis._m4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\n\t\t\t\t\tm3.getNormalMatrix( this._m4 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"PROJECTION\":\n\n\t\t\t\t\tvar m4 = boundUniform.uniform.value;\n\t\t\t\t\tm4.copy( camera.projectionMatrix );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"JOINTMATRIX\":\n\n\t\t\t\t\tvar m4v = boundUniform.uniform.value;\n\n\t\t\t\t\tfor ( var mi = 0; mi < m4v.length; mi ++ ) {\n\n\t\t\t\t\t\t// So it goes like this:\n\t\t\t\t\t\t// SkinnedMesh world matrix is already baked into MODELVIEW;\n\t\t\t\t\t\t// transform joints to local space,\n\t\t\t\t\t\t// then transform using joint's inverse\n\t\t\t\t\t\tm4v[ mi ]\n\t\t\t\t\t\t\t.getInverse( boundUniform.sourceNode.matrixWorld )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.skeleton.bones[ mi ].matrixWorld )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.skeleton.boneInverses[ mi ] )\n\t\t\t\t\t\t\t.multiply( boundUniform.targetNode.bindMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault :\n\n\t\t\t\t\tconsole.warn( \"Unhandled shader semantic: \" + boundUniform.semantic );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\n\t/* ANIMATION */\n\n\tGLTFLoader.Animations = {\n\n\t\tupdate: function () {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader.Animation has been deprecated. Use THREE.AnimationMixer instead.' );\n\n\t\t}\n\n\t};\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_MATERIALS_COMMON: 'KHR_materials_common'\n\t};\n\n\t/* MATERIALS COMMON EXTENSION */\n\n\tfunction GLTFMaterialsCommonExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_COMMON;\n\n\t\tthis.lights = {};\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) || {};\n\t\tvar lights = extension.lights || {};\n\n\t\tfor ( var lightId in lights ) {\n\n\t\t\tvar light = lights[ lightId ];\n\t\t\tvar lightNode;\n\n\t\t\tvar lightParams = light[ light.type ];\n\t\t\tvar color = new THREE.Color().fromArray( lightParams.color );\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase \"directional\":\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"point\":\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"spot\":\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ambient\":\n\t\t\t\t\tlightNode = new THREE.AmbientLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightNode ) {\n\n\t\t\t\tthis.lights[ lightId ] = lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\n\tvar BINARY_EXTENSION_HEADER_DEFAULTS = { magic: 'glTF', version: 1, contentFormat: 0 };\n\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 20;\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tvar header = {\n\t\t\tmagic: convertUint8ArrayToString( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true ),\n\t\t\tcontentLength: headerView.getUint32( 12, true ),\n\t\t\tcontentFormat: headerView.getUint32( 16, true )\n\t\t};\n\n\t\tfor ( var key in BINARY_EXTENSION_HEADER_DEFAULTS ) {\n\n\t\t\tvar value = BINARY_EXTENSION_HEADER_DEFAULTS[ key ];\n\n\t\t\tif ( header[ key ] !== value ) {\n\n\t\t\t\tthrow new Error( 'Unsupported glTF-Binary header: Expected \"%s\" to be \"%s\".', key, value );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH, header.contentLength );\n\n\t\tthis.header = header;\n\t\tthis.content = convertUint8ArrayToString( contentArray );\n\t\tthis.body = data.slice( BINARY_EXTENSION_HEADER_LENGTH + header.contentLength, header.length );\n\n\t}\n\n\tGLTFBinaryExtension.prototype.loadShader = function ( shader, bufferViews ) {\n\n\t\tvar bufferView = bufferViews[ shader.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].bufferView ];\n\t\tvar array = new Uint8Array( bufferView );\n\n\t\treturn convertUint8ArrayToString( array );\n\n\t};\n\n\tGLTFBinaryExtension.prototype.loadTextureSourceUri = function ( source, bufferViews ) {\n\n\t\tvar metadata = source.extensions[ EXTENSIONS.KHR_BINARY_GLTF ];\n\t\tvar bufferView = bufferViews[ metadata.bufferView ];\n\t\tvar stringData = convertUint8ArrayToString( new Uint8Array( bufferView ) );\n\n\t\treturn 'data:' + metadata.mimeType + ';base64,' + btoa( stringData );\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tTRIANGLES: 4,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123,\n\n\t\tVERTEX_SHADER: 35633,\n\t\tFRAGMENT_SHADER: 35632\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TEXTURE_FORMATS = {\n\t\t6406: THREE.AlphaFormat,\n\t\t6407: THREE.RGBFormat,\n\t\t6408: THREE.RGBAFormat,\n\t\t6409: THREE.LuminanceFormat,\n\t\t6410: THREE.LuminanceAlphaFormat\n\t};\n\n\tvar WEBGL_TEXTURE_DATATYPES = {\n\t\t5121: THREE.UnsignedByteType,\n\t\t32819: THREE.UnsignedShort4444Type,\n\t\t32820: THREE.UnsignedShort5551Type,\n\t\t33635: THREE.UnsignedShort565Type\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide,  // Culling front\n\t\t1029: THREE.FrontSide  // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction _each( object, callback, thisObj ) {\n\n\t\tif ( !object ) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tvar results;\n\t\tvar fns = [];\n\n\t\tif ( Object.prototype.toString.call( object ) === '[object Array]' ) {\n\n\t\t\tresults = [];\n\n\t\t\tvar length = object.length;\n\n\t\t\tfor ( var idx = 0; idx < length; idx ++ ) {\n\n\t\t\t\tvar value = callback.call( thisObj || this, object[ idx ], idx );\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tfns.push( value );\n\n\t\t\t\t\tif ( value instanceof Promise ) {\n\n\t\t\t\t\t\tvalue.then( function( key, value ) {\n\n\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t}.bind( this, idx ));\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tresults[ idx ] = value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tresults = {};\n\n\t\t\tfor ( var key in object ) {\n\n\t\t\t\tif ( object.hasOwnProperty( key ) ) {\n\n\t\t\t\t\tvar value = callback.call( thisObj || this, object[ key ], key );\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tfns.push( value );\n\n\t\t\t\t\t\tif ( value instanceof Promise ) {\n\n\t\t\t\t\t\t\tvalue.then( function( key, value ) {\n\n\t\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t\t}.bind( this, key ));\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresults[ key ] = value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( fns ).then( function() {\n\n\t\t\treturn results;\n\n\t\t});\n\n\t}\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\treturn '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) {\n\n\t\t\treturn url;\n\n\t\t}\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) {\n\n\t\t\treturn url;\n\n\t\t}\n\n\t\t// Relative URL\n\t\treturn ( path || '' ) + url;\n\n\t}\n\n\tfunction convertUint8ArrayToString( array ) {\n\n\t\tif ( window.TextDecoder !== undefined ) {\n\n\t\t\t//return new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\treturn s;\n\n\t}\n\n\t// Three.js seems too dependent on attribute names so globally\n\t// replace those in the shader code\n\tfunction replaceTHREEShaderAttributes( shaderText, technique ) {\n\n\t\t// Expected technique attributes\n\t\tvar attributes = {};\n\n\t\tfor ( var attributeId in technique.attributes ) {\n\n\t\t\tvar pname = technique.attributes[ attributeId ];\n\n\t\t\tvar param = technique.parameters[ pname ];\n\t\t\tvar atype = param.type;\n\t\t\tvar semantic = param.semantic;\n\n\t\t\tattributes[ attributeId ] = {\n\t\t\t\ttype: atype,\n\t\t\t\tsemantic: semantic\n\t\t\t};\n\n\t\t}\n\n\t\t// Figure out which attributes to change in technique\n\n\t\tvar shaderParams = technique.parameters;\n\t\tvar shaderAttributes = technique.attributes;\n\t\tvar params = {};\n\n\t\tfor ( var attributeId in attributes ) {\n\n\t\t\tvar pname = shaderAttributes[ attributeId ];\n\t\t\tvar shaderParam = shaderParams[ pname ];\n\t\t\tvar semantic = shaderParam.semantic;\n\t\t\tif ( semantic ) {\n\n\t\t\t\tparams[ attributeId ] = shaderParam;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var pname in params ) {\n\n\t\t\tvar param = params[ pname ];\n\t\t\tvar semantic = param.semantic;\n\n\t\t\tvar regEx = new RegExp( \"\\\\b\" + pname + \"\\\\b\", \"g\" );\n\n\t\t\tswitch ( semantic ) {\n\n\t\t\t\tcase \"POSITION\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'position' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"NORMAL\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'normal' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TEXCOORD_0':\n\t\t\t\tcase 'TEXCOORD0':\n\t\t\t\tcase 'TEXCOORD':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'uv' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TEXCOORD_1':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'uv2' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'COLOR_0':\n\t\t\t\tcase 'COLOR0':\n\t\t\t\tcase 'COLOR':\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'color' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"WEIGHT\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'skinWeight' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"JOINT\":\n\n\t\t\t\t\tshaderText = shaderText.replace( regEx, 'skinIndex' );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shaderText;\n\n\t}\n\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshPhongMaterial( {\n\t\t\tcolor: 0x00000,\n\t\t\temissive: 0x888888,\n\t\t\tspecular: 0x000000,\n\t\t\tshininess: 0,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\t// Deferred constructor for RawShaderMaterial types\n\tfunction DeferredShaderMaterial( params ) {\n\n\t\tthis.isDeferredShaderMaterial = true;\n\n\t\tthis.params = params;\n\n\t}\n\n\tDeferredShaderMaterial.prototype.create = function () {\n\n\t\tvar uniforms = THREE.UniformsUtils.clone( this.params.uniforms );\n\n\t\tfor ( var uniformId in this.params.uniforms ) {\n\n\t\t\tvar originalUniform = this.params.uniforms[ uniformId ];\n\n\t\t\tif ( originalUniform.value instanceof THREE.Texture ) {\n\n\t\t\t\tuniforms[ uniformId ].value = originalUniform.value;\n\t\t\t\tuniforms[ uniformId ].value.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tuniforms[ uniformId ].semantic = originalUniform.semantic;\n\t\t\tuniforms[ uniformId ].node = originalUniform.node;\n\n\t\t}\n\n\t\tthis.params.uniforms = uniforms;\n\n\t\treturn new THREE.RawShaderMaterial( this.params );\n\n\t};\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t}\n\n\tGLTFParser.prototype._withDependencies = function ( dependencies ) {\n\n\t\tvar _dependencies = {};\n\n\t\tfor ( var i = 0; i < dependencies.length; i ++ ) {\n\n\t\t\tvar dependency = dependencies[ i ];\n\t\t\tvar fnName = \"load\" + dependency.charAt( 0 ).toUpperCase() + dependency.slice( 1 );\n\n\t\t\tvar cached = this.cache.get( dependency );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\t_dependencies[ dependency ] = cached;\n\n\t\t\t} else if ( this[ fnName ] ) {\n\n\t\t\t\tvar fn = this[ fnName ]();\n\t\t\t\tthis.cache.add( dependency, fn );\n\n\t\t\t\t_dependencies[ dependency ] = fn;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn _each( _dependencies, function ( dependency ) {\n\n\t\t\treturn dependency;\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.parse = function ( callback ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Fire the callback on complete\n\t\tthis._withDependencies( [\n\n\t\t\t\"scenes\",\n\t\t\t\"cameras\",\n\t\t\t\"animations\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = [];\n\n\t\t\tfor ( var name in dependencies.scenes ) {\n\n\t\t\t\tscenes.push( dependencies.scenes[ name ] );\n\n\t\t\t}\n\n\t\t\tvar scene = json.scene !== undefined ? dependencies.scenes[ json.scene ] : scenes[ 0 ];\n\n\t\t\tvar cameras = [];\n\n\t\t\tfor ( var name in dependencies.cameras ) {\n\n\t\t\t\tvar camera = dependencies.cameras[ name ];\n\t\t\t\tcameras.push( camera );\n\n\t\t\t}\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var name in dependencies.animations ) {\n\n\t\t\t\tanimations.push( dependencies.animations[ name ] );\n\n\t\t\t}\n\n\t\t\tcallback( scene, scenes, cameras, animations );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadShaders = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.shaders, function ( shader ) {\n\n\t\t\t\tif ( shader.extensions && shader.extensions[ EXTENSIONS.KHR_BINARY_GLTF ] ) {\n\n\t\t\t\t\treturn extensions[ EXTENSIONS.KHR_BINARY_GLTF ].loadShader( shader, dependencies.bufferViews );\n\n\t\t\t\t}\n\n\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\tvar loader = new THREE.FileLoader();\n\t\t\t\t\tloader.setResponseType( 'text' );\n\t\t\t\t\tloader.load( resolveURL( shader.uri, options.path ), function ( shaderText ) {\n\n\t\t\t\t\t\tresolve( shaderText );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadBuffers = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn _each( json.buffers, function ( buffer, name ) {\n\n\t\t\tif ( name === BINARY_EXTENSION_BUFFER_NAME ) {\n\n\t\t\t\treturn extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body;\n\n\t\t\t}\n\n\t\t\tif ( buffer.type === 'arraybuffer' || buffer.type === undefined ) {\n\n\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\tvar loader = new THREE.FileLoader();\n\t\t\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\t\t\tloader.load( resolveURL( buffer.uri, options.path ), function ( buffer ) {\n\n\t\t\t\t\t\tresolve( buffer );\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: ' + buffer.type + ' buffer type is not supported' );\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadBufferViews = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"buffers\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.bufferViews, function ( bufferView ) {\n\n\t\t\t\tvar arraybuffer = dependencies.buffers[ bufferView.buffer ];\n\n\t\t\t\tvar byteLength = bufferView.byteLength !== undefined ? bufferView.byteLength : 0;\n\n\t\t\t\treturn arraybuffer.slice( bufferView.byteOffset, bufferView.byteOffset + byteLength );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadAccessors = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.accessors, function ( accessor ) {\n\n\t\t\t\tvar arraybuffer = dependencies.bufferViews[ accessor.bufferView ];\n\t\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessor.type ];\n\t\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessor.componentType ];\n\n\t\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\t\tvar itemBytes = elementBytes * itemSize;\n\n\t\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\t\tif ( accessor.byteStride && accessor.byteStride !== itemBytes ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tvar array = new TypedArray( arraybuffer );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tvar ib = new THREE.InterleavedBuffer( array, accessor.byteStride / elementBytes );\n\n\t\t\t\t\treturn new THREE.InterleavedBufferAttribute( ib, itemSize, accessor.byteOffset / elementBytes );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( arraybuffer, accessor.byteOffset, accessor.count * itemSize );\n\n\t\t\t\t\treturn new THREE.BufferAttribute( array, itemSize );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadTextures = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar options = this.options;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"bufferViews\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.textures, function ( texture ) {\n\n\t\t\t\tif ( texture.source ) {\n\n\t\t\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\t\t\tvar source = json.images[ texture.source ];\n\t\t\t\t\t\tvar sourceUri = source.uri;\n\n\t\t\t\t\t\tif ( source.extensions && source.extensions[ EXTENSIONS.KHR_BINARY_GLTF ] ) {\n\n\t\t\t\t\t\t\tsourceUri = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].loadTextureSourceUri( source, dependencies.bufferViews );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar textureLoader = THREE.Loader.Handlers.get( sourceUri );\n\n\t\t\t\t\t\tif ( textureLoader === null ) {\n\n\t\t\t\t\t\t\ttextureLoader = new THREE.TextureLoader();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( options.crossOrigin );\n\n\t\t\t\t\t\ttextureLoader.load( resolveURL( sourceUri, options.path ), function ( _texture ) {\n\n\t\t\t\t\t\t\t_texture.flipY = false;\n\n\t\t\t\t\t\t\tif ( texture.name !== undefined ) _texture.name = texture.name;\n\n\t\t\t\t\t\t\t_texture.format = texture.format !== undefined ? WEBGL_TEXTURE_FORMATS[ texture.format ] : THREE.RGBAFormat;\n\n\t\t\t\t\t\t\tif ( texture.internalFormat !== undefined && _texture.format !== WEBGL_TEXTURE_FORMATS[ texture.internalFormat ] ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Three.js doesn\\'t support texture internalFormat which is different from texture format. ' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'internalFormat will be forced to be the same value as format.' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_texture.type = texture.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ texture.type ] : THREE.UnsignedByteType;\n\n\t\t\t\t\t\t\tif ( texture.sampler ) {\n\n\t\t\t\t\t\t\t\tvar sampler = json.samplers[ texture.sampler ];\n\n\t\t\t\t\t\t\t\t_texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\t\t\t\t\t\t_texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.NearestMipMapLinearFilter;\n\t\t\t\t\t\t\t\t_texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\t\t\t\t\t\t_texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve( _texture );\n\n\t\t\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\t\t\tresolve();\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadMaterials = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"shaders\",\n\t\t\t\"textures\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.materials, function ( material ) {\n\n\t\t\t\tvar materialType;\n\t\t\t\tvar materialValues = {};\n\t\t\t\tvar materialParams = {};\n\n\t\t\t\tvar khr_material;\n\n\t\t\t\tif ( material.extensions && material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) {\n\n\t\t\t\t\tkhr_material = material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( khr_material ) {\n\n\t\t\t\t\t// don't copy over unused values to avoid material warning spam\n\t\t\t\t\tvar keys = [ 'ambient', 'emission', 'transparent', 'transparency', 'doubleSided' ];\n\n\t\t\t\t\tswitch ( khr_material.technique ) {\n\n\t\t\t\t\t\tcase 'BLINN' :\n\t\t\t\t\t\tcase 'PHONG' :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\t\t\t\t\t\t\tkeys.push( 'diffuse', 'specular', 'shininess' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LAMBERT' :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshLambertMaterial;\n\t\t\t\t\t\t\tkeys.push( 'diffuse' );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CONSTANT' :\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tmaterialType = THREE.MeshBasicMaterial;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkeys.forEach( function( v ) {\n\n\t\t\t\t\t\tif ( khr_material.values[ v ] !== undefined ) materialValues[ v ] = khr_material.values[ v ];\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( khr_material.doubleSided || materialValues.doubleSided ) {\n\n\t\t\t\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( khr_material.transparent || materialValues.transparent ) {\n\n\t\t\t\t\t\tmaterialParams.transparent = true;\n\t\t\t\t\t\tmaterialParams.opacity = ( materialValues.transparency !== undefined ) ? materialValues.transparency : 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.technique === undefined ) {\n\n\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\tObject.assign( materialValues, material.values );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialType = DeferredShaderMaterial;\n\n\t\t\t\t\tvar technique = json.techniques[ material.technique ];\n\n\t\t\t\t\tmaterialParams.uniforms = {};\n\n\t\t\t\t\tvar program = json.programs[ technique.program ];\n\n\t\t\t\t\tif ( program ) {\n\n\t\t\t\t\t\tmaterialParams.fragmentShader = dependencies.shaders[ program.fragmentShader ];\n\n\t\t\t\t\t\tif ( ! materialParams.fragmentShader ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"ERROR: Missing fragment shader definition:\", program.fragmentShader );\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar vertexShader = dependencies.shaders[ program.vertexShader ];\n\n\t\t\t\t\t\tif ( ! vertexShader ) {\n\n\t\t\t\t\t\t\tconsole.warn( \"ERROR: Missing vertex shader definition:\", program.vertexShader );\n\t\t\t\t\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// IMPORTANT: FIX VERTEX SHADER ATTRIBUTE DEFINITIONS\n\t\t\t\t\t\tmaterialParams.vertexShader = replaceTHREEShaderAttributes( vertexShader, technique );\n\n\t\t\t\t\t\tvar uniforms = technique.uniforms;\n\n\t\t\t\t\t\tfor ( var uniformId in uniforms ) {\n\n\t\t\t\t\t\t\tvar pname = uniforms[ uniformId ];\n\t\t\t\t\t\t\tvar shaderParam = technique.parameters[ pname ];\n\n\t\t\t\t\t\t\tvar ptype = shaderParam.type;\n\n\t\t\t\t\t\t\tif ( WEBGL_TYPE[ ptype ] ) {\n\n\t\t\t\t\t\t\t\tvar pcount = shaderParam.count;\n\t\t\t\t\t\t\t\tvar value;\n\n\t\t\t\t\t\t\t\tif ( material.values !== undefined ) value = material.values[ pname ];\n\n\t\t\t\t\t\t\t\tvar uvalue = new WEBGL_TYPE[ ptype ]();\n\t\t\t\t\t\t\t\tvar usemantic = shaderParam.semantic;\n\t\t\t\t\t\t\t\tvar unode = shaderParam.node;\n\n\t\t\t\t\t\t\t\tswitch ( ptype ) {\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT:\n\n\t\t\t\t\t\t\t\t\t\tuvalue = shaderParam.value;\n\n\t\t\t\t\t\t\t\t\t\tif ( pname == \"transparency\" ) {\n\n\t\t\t\t\t\t\t\t\t\t\tmaterialParams.transparent = true;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = value;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC2:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC3:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_VEC4:\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT3:\n\n\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( shaderParam.value );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT2:\n\n\t\t\t\t\t\t\t\t\t\t// what to do?\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"FLOAT_MAT2 is not a supported uniform type\" );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.FLOAT_MAT4:\n\n\t\t\t\t\t\t\t\t\t\tif ( pcount ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = new Array( pcount );\n\n\t\t\t\t\t\t\t\t\t\t\tfor ( var mi = 0; mi < pcount; mi ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue[ mi ] = new WEBGL_TYPE[ ptype ]();\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar m4v = shaderParam.value;\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( m4v );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( shaderParam && shaderParam.value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tvar m4 = shaderParam.value;\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( m4 );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tuvalue.fromArray( value );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase WEBGL_CONSTANTS.SAMPLER_2D:\n\n\t\t\t\t\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = dependencies.textures[ value ];\n\n\t\t\t\t\t\t\t\t\t\t} else if ( shaderParam.value !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = dependencies.textures[ shaderParam.value ];\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tuvalue = null;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmaterialParams.uniforms[ uniformId ] = {\n\t\t\t\t\t\t\t\t\tvalue: uvalue,\n\t\t\t\t\t\t\t\t\tsemantic: usemantic,\n\t\t\t\t\t\t\t\t\tnode: unode\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tthrow new Error( \"Unknown shader uniform param type: \" + ptype );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar states = technique.states || {};\n\t\t\t\t\t\tvar enables = states.enable || [];\n\t\t\t\t\t\tvar functions = states.functions || {};\n\n\t\t\t\t\t\tvar enableCullFace = false;\n\t\t\t\t\t\tvar enableDepthTest = false;\n\t\t\t\t\t\tvar enableBlend = false;\n\n\t\t\t\t\t\tfor ( var i = 0, il = enables.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar enable = enables[ i ];\n\n\t\t\t\t\t\t\tswitch ( STATES_ENABLES[ enable ] ) {\n\n\t\t\t\t\t\t\t\tcase 'CULL_FACE':\n\n\t\t\t\t\t\t\t\t\tenableCullFace = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'DEPTH_TEST':\n\n\t\t\t\t\t\t\t\t\tenableDepthTest = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'BLEND':\n\n\t\t\t\t\t\t\t\t\tenableBlend = true;\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t// TODO: implement\n\t\t\t\t\t\t\t\tcase 'SCISSOR_TEST':\n\t\t\t\t\t\t\t\tcase 'POLYGON_OFFSET_FILL':\n\t\t\t\t\t\t\t\tcase 'SAMPLE_ALPHA_TO_COVERAGE':\n\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tthrow new Error( \"Unknown technique.states.enable: \" + enable );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( enableCullFace ) {\n\n\t\t\t\t\t\t\tmaterialParams.side = functions.cullFace !== undefined ? WEBGL_SIDES[ functions.cullFace ] : THREE.FrontSide;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterialParams.depthTest = enableDepthTest;\n\t\t\t\t\t\tmaterialParams.depthFunc = functions.depthFunc !== undefined ? WEBGL_DEPTH_FUNCS[ functions.depthFunc ] : THREE.LessDepth;\n\t\t\t\t\t\tmaterialParams.depthWrite = functions.depthMask !== undefined ? functions.depthMask[ 0 ] : true;\n\n\t\t\t\t\t\tmaterialParams.blending = enableBlend ? THREE.CustomBlending : THREE.NoBlending;\n\t\t\t\t\t\tmaterialParams.transparent = enableBlend;\n\n\t\t\t\t\t\tvar blendEquationSeparate = functions.blendEquationSeparate;\n\n\t\t\t\t\t\tif ( blendEquationSeparate !== undefined ) {\n\n\t\t\t\t\t\t\tmaterialParams.blendEquation = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 0 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendEquationAlpha = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 1 ] ];\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.blendEquation = THREE.AddEquation;\n\t\t\t\t\t\t\tmaterialParams.blendEquationAlpha = THREE.AddEquation;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar blendFuncSeparate = functions.blendFuncSeparate;\n\n\t\t\t\t\t\tif ( blendFuncSeparate !== undefined ) {\n\n\t\t\t\t\t\t\tmaterialParams.blendSrc = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 0 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendDst = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 1 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendSrcAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 2 ] ];\n\t\t\t\t\t\t\tmaterialParams.blendDstAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 3 ] ];\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterialParams.blendSrc = THREE.OneFactor;\n\t\t\t\t\t\t\tmaterialParams.blendDst = THREE.ZeroFactor;\n\t\t\t\t\t\t\tmaterialParams.blendSrcAlpha = THREE.OneFactor;\n\t\t\t\t\t\t\tmaterialParams.blendDstAlpha = THREE.ZeroFactor;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.diffuse ) ) {\n\n\t\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.diffuse );\n\n\t\t\t\t} else if ( typeof( materialValues.diffuse ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.map = dependencies.textures[ materialValues.diffuse ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete materialParams.diffuse;\n\n\t\t\t\tif ( typeof( materialValues.reflective ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.envMap = dependencies.textures[ materialValues.reflective ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( typeof( materialValues.bump ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.bumpMap = dependencies.textures[ materialValues.bump ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.emission ) ) {\n\n\t\t\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\t\tmaterialParams.color = new THREE.Color().fromArray( materialValues.emission );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialValues.emission );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( typeof( materialValues.emission ) === 'string' ) {\n\n\t\t\t\t\tif ( materialType === THREE.MeshBasicMaterial ) {\n\n\t\t\t\t\t\tmaterialParams.map = dependencies.textures[ materialValues.emission ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmaterialParams.emissiveMap = dependencies.textures[ materialValues.emission ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( Array.isArray( materialValues.specular ) ) {\n\n\t\t\t\t\tmaterialParams.specular = new THREE.Color().fromArray( materialValues.specular );\n\n\t\t\t\t} else if ( typeof( materialValues.specular ) === 'string' ) {\n\n\t\t\t\t\tmaterialParams.specularMap = dependencies.textures[ materialValues.specular ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( materialValues.shininess !== undefined ) {\n\n\t\t\t\t\tmaterialParams.shininess = materialValues.shininess;\n\n\t\t\t\t}\n\n\t\t\t\tvar _material = new materialType( materialParams );\n\t\t\t\tif ( material.name !== undefined ) _material.name = material.name;\n\n\t\t\t\treturn _material;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadMeshes = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\",\n\t\t\t\"materials\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.meshes, function ( mesh ) {\n\n\t\t\t\tvar group = new THREE.Group();\n\t\t\t\tif ( mesh.name !== undefined ) group.name = mesh.name;\n\n\t\t\t\tif ( mesh.extras ) group.userData = mesh.extras;\n\n\t\t\t\tvar primitives = mesh.primitives || [];\n\n\t\t\t\tfor ( var name in primitives ) {\n\n\t\t\t\t\tvar primitive = primitives[ name ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === undefined ) {\n\n\t\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\t\tvar attributes = primitive.attributes;\n\n\t\t\t\t\t\tfor ( var attributeId in attributes ) {\n\n\t\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\n\n\t\t\t\t\t\t\tif ( ! attributeEntry ) return;\n\n\t\t\t\t\t\t\tvar bufferAttribute = dependencies.accessors[ attributeEntry ];\n\n\t\t\t\t\t\t\tswitch ( attributeId ) {\n\n\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'NORMAL':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'normal', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'TEXCOORD_0':\n\t\t\t\t\t\t\t\tcase 'TEXCOORD0':\n\t\t\t\t\t\t\t\tcase 'TEXCOORD':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'TEXCOORD_1':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'uv2', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'COLOR_0':\n\t\t\t\t\t\t\t\tcase 'COLOR0':\n\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'WEIGHT':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinWeight', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'JOINT':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'skinIndex', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase '_BATCHID':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( '_BATCHID', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.indices ) {\n\n\t\t\t\t\t\t\tgeometry.setIndex( dependencies.accessors[ primitive.indices ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = dependencies.materials !== undefined ? dependencies.materials[ primitive.material ] : createDefaultMaterial();\n\n\t\t\t\t\t\tvar meshNode = new THREE.Mesh( geometry, material );\n\t\t\t\t\t\tmeshNode.castShadow = true;\n\t\t\t\t\t\tmeshNode.name = ( name === \"0\" ? group.name : group.name + name );\n\n\t\t\t\t\t\tif ( primitive.extras ) meshNode.userData = primitive.extras;\n\n\t\t\t\t\t\tgroup.add( meshNode );\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES\n\t\t\t\t\t\t\t|| primitive.mode === WEBGL_CONSTANTS.LINE_STRIP\n\t\t\t\t\t\t\t|| primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tvar geometry = new THREE.BufferGeometry();\n\n\t\t\t\t\t\tvar attributes = primitive.attributes;\n\n\t\t\t\t\t\tfor ( var attributeId in attributes ) {\n\n\t\t\t\t\t\t\tvar attributeEntry = attributes[ attributeId ];\n\n\t\t\t\t\t\t\tif ( ! attributeEntry ) return;\n\n\t\t\t\t\t\t\tvar bufferAttribute = dependencies.accessors[ attributeEntry ];\n\n\t\t\t\t\t\t\tswitch ( attributeId ) {\n\n\t\t\t\t\t\t\t\tcase 'POSITION':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'position', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 'COLOR_0':\n\t\t\t\t\t\t\t\tcase 'COLOR0':\n\t\t\t\t\t\t\t\tcase 'COLOR':\n\t\t\t\t\t\t\t\t\tgeometry.addAttribute( 'color', bufferAttribute );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar material = dependencies.materials[ primitive.material ];\n\n\t\t\t\t\t\tvar meshNode;\n\n\t\t\t\t\t\tif ( primitive.indices ) {\n\n\t\t\t\t\t\t\tgeometry.setIndex( dependencies.accessors[ primitive.indices ] );\n\n\t\t\t\t\t\t\tmeshNode = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\t\t\t\t\t\t\t\tmeshNode = new THREE.LineSegments( geometry, material );\n\t\t\t\t\t\t\t} else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n\t\t\t\t\t\t\t\tmeshNode = new THREE.LineLoop( geometry, material );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmeshNode = new THREE.Line( geometry, material );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmeshNode.name = ( name === \"0\" ? group.name : group.name + name );\n\n\t\t\t\t\t\tif ( primitive.extras ) meshNode.userData = primitive.extras;\n\n\t\t\t\t\t\tgroup.add( meshNode );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( \"Only triangular and line primitives are supported\" );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadCameras = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn _each( json.cameras, function ( camera ) {\n\n\t\t\tif ( camera.type == \"perspective\" && camera.perspective ) {\n\n\t\t\t\tvar yfov = camera.perspective.yfov;\n\t\t\t\tvar aspectRatio = camera.perspective.aspectRatio !== undefined ? camera.perspective.aspectRatio : 1;\n\n\t\t\t\t// According to COLLADA spec...\n\t\t\t\t// aspectRatio = xfov / yfov\n\t\t\t\tvar xfov = yfov * aspectRatio;\n\n\t\t\t\tvar _camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, camera.perspective.znear || 1, camera.perspective.zfar || 2e6 );\n\t\t\t\tif ( camera.name !== undefined ) _camera.name = camera.name;\n\n\t\t\t\tif ( camera.extras ) _camera.userData = camera.extras;\n\n\t\t\t\treturn _camera;\n\n\t\t\t} else if ( camera.type == \"orthographic\" && camera.orthographic ) {\n\n\t\t\t\tvar _camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, camera.orthographic.znear, camera.orthographic.zfar );\n\t\t\t\tif ( camera.name !== undefined ) _camera.name = camera.name;\n\n\t\t\t\tif ( camera.extras ) _camera.userData = camera.extras;\n\n\t\t\t\treturn _camera;\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadSkins = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.skins, function ( skin ) {\n\n\t\t\t\tvar bindShapeMatrix = new THREE.Matrix4();\n\n\t\t\t\tif ( skin.bindShapeMatrix !== undefined ) bindShapeMatrix.fromArray( skin.bindShapeMatrix );\n\n\t\t\t\tvar _skin = {\n\t\t\t\t\tbindShapeMatrix: bindShapeMatrix,\n\t\t\t\t\tjointNames: skin.jointNames,\n\t\t\t\t\tinverseBindMatrices: dependencies.accessors[ skin.inverseBindMatrices ]\n\t\t\t\t};\n\n\t\t\t\treturn _skin;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadAnimations = function () {\n\n\t\tvar json = this.json;\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"accessors\",\n\t\t\t\"nodes\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.animations, function ( animation, animationId ) {\n\n\t\t\t\tvar tracks = [];\n\n\t\t\t\tfor ( var channelId in animation.channels ) {\n\n\t\t\t\t\tvar channel = animation.channels[ channelId ];\n\t\t\t\t\tvar sampler = animation.samplers[ channel.sampler ];\n\n\t\t\t\t\tif ( sampler ) {\n\n\t\t\t\t\t\tvar target = channel.target;\n\t\t\t\t\t\tvar name = target.id;\n\t\t\t\t\t\tvar input = animation.parameters !== undefined ? animation.parameters[ sampler.input ] : sampler.input;\n\t\t\t\t\t\tvar output = animation.parameters !== undefined ? animation.parameters[ sampler.output ] : sampler.output;\n\n\t\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\n\t\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\n\n\t\t\t\t\t\tvar node = dependencies.nodes[ name ];\n\n\t\t\t\t\t\tif ( node ) {\n\n\t\t\t\t\t\t\tnode.updateMatrix();\n\t\t\t\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\t\t\t\tvar TypedKeyframeTrack = PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.rotation\n\t\t\t\t\t\t\t\t? THREE.QuaternionKeyframeTrack\n\t\t\t\t\t\t\t\t: THREE.VectorKeyframeTrack;\n\n\t\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\t\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\t\t\t\ttracks.push( new TypedKeyframeTrack(\n\t\t\t\t\t\t\t\ttargetName + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tinterpolation\n\t\t\t\t\t\t\t) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar name = animation.name !== undefined ? animation.name : \"animation_\" + animationId;\n\n\t\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadNodes = function () {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar scope = this;\n\n\t\treturn _each( json.nodes, function ( node ) {\n\n\t\t\tvar matrix = new THREE.Matrix4();\n\n\t\t\tvar _node;\n\n\t\t\tif ( node.jointName ) {\n\n\t\t\t\t_node = new THREE.Bone();\n\t\t\t\t_node.name = node.name !== undefined ? node.name : node.jointName;\n\t\t\t\t_node.jointName = node.jointName;\n\n\t\t\t} else {\n\n\t\t\t\t_node = new THREE.Object3D();\n\t\t\t\tif ( node.name !== undefined ) _node.name = node.name;\n\n\t\t\t}\n\n\t\t\tif ( node.extras ) _node.userData = node.extras;\n\n\t\t\tif ( node.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( node.matrix );\n\t\t\t\t_node.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( node.translation !== undefined ) {\n\n\t\t\t\t\t_node.position.fromArray( node.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( node.rotation !== undefined ) {\n\n\t\t\t\t\t_node.quaternion.fromArray( node.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( node.scale !== undefined ) {\n\n\t\t\t\t\t_node.scale.fromArray( node.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn _node;\n\n\t\t} ).then( function ( __nodes ) {\n\n\t\t\treturn scope._withDependencies( [\n\n\t\t\t\t\"meshes\",\n\t\t\t\t\"skins\",\n\t\t\t\t\"cameras\"\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\treturn _each( __nodes, function ( _node, nodeId ) {\n\n\t\t\t\t\tvar node = json.nodes[ nodeId ];\n\n\t\t\t\t\tif ( node.meshes !== undefined ) {\n\n\t\t\t\t\t\tfor ( var meshId in node.meshes ) {\n\n\t\t\t\t\t\t\tvar mesh = node.meshes[ meshId ];\n\t\t\t\t\t\t\tvar group = dependencies.meshes[ mesh ];\n\n\t\t\t\t\t\t\tif ( group === undefined ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'GLTFLoader: Couldn\\'t find node \"' + mesh + '\".' );\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor ( var childrenId in group.children ) {\n\n\t\t\t\t\t\t\t\tvar child = group.children[ childrenId ];\n\n\t\t\t\t\t\t\t\t// clone Mesh to add to _node\n\n\t\t\t\t\t\t\t\tvar originalMaterial = child.material;\n\t\t\t\t\t\t\t\tvar originalGeometry = child.geometry;\n\t\t\t\t\t\t\t\tvar originalUserData = child.userData;\n\t\t\t\t\t\t\t\tvar originalName = child.name;\n\n\t\t\t\t\t\t\t\tvar material;\n\n\t\t\t\t\t\t\t\tif ( originalMaterial.isDeferredShaderMaterial ) {\n\n\t\t\t\t\t\t\t\t\toriginalMaterial = material = originalMaterial.create();\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tmaterial = originalMaterial;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tswitch ( child.type ) {\n\n\t\t\t\t\t\t\t\t\tcase 'LineSegments':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.LineSegments( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'LineLoop':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.LineLoop( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase 'Line':\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.Line( originalGeometry, material );\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tchild = new THREE.Mesh( originalGeometry, material );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tchild.castShadow = true;\n\t\t\t\t\t\t\t\tchild.userData = originalUserData;\n\t\t\t\t\t\t\t\tchild.name = originalName;\n\n\t\t\t\t\t\t\t\tvar skinEntry;\n\n\t\t\t\t\t\t\t\tif ( node.skin ) {\n\n\t\t\t\t\t\t\t\t\tskinEntry = dependencies.skins[ node.skin ];\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Replace Mesh with SkinnedMesh in library\n\t\t\t\t\t\t\t\tif ( skinEntry ) {\n\n\t\t\t\t\t\t\t\t\tvar getJointNode = function ( jointId ) {\n\n\t\t\t\t\t\t\t\t\t\tvar keys = Object.keys( __nodes );\n\n\t\t\t\t\t\t\t\t\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar n = __nodes[ keys[ i ] ];\n\n\t\t\t\t\t\t\t\t\t\t\tif ( n.jointName === jointId ) return n;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tvar geometry = originalGeometry;\n\t\t\t\t\t\t\t\t\tvar material = originalMaterial;\n\t\t\t\t\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t\t\t\t\t\tchild = new THREE.SkinnedMesh( geometry, material, false );\n\t\t\t\t\t\t\t\t\tchild.castShadow = true;\n\t\t\t\t\t\t\t\t\tchild.userData = originalUserData;\n\t\t\t\t\t\t\t\t\tchild.name = originalName;\n\n\t\t\t\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\t\t\t\tfor ( var i = 0, l = skinEntry.jointNames.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\tvar jointId = skinEntry.jointNames[ i ];\n\t\t\t\t\t\t\t\t\t\tvar jointNode = getJointNode( jointId );\n\n\t\t\t\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\t\t\t\tvar m = skinEntry.inverseBindMatrices.array;\n\t\t\t\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4().fromArray( m, i * 16 );\n\t\t\t\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( \"WARNING: joint: '\" + jointId + \"' could not be found\" );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tchild.bind( new THREE.Skeleton( bones, boneInverses, false ), skinEntry.bindShapeMatrix );\n\n\t\t\t\t\t\t\t\t\tvar buildBoneGraph = function ( parentJson, parentObject, property ) {\n\n\t\t\t\t\t\t\t\t\t\tvar children = parentJson[ property ];\n\n\t\t\t\t\t\t\t\t\t\tif ( children === undefined ) return;\n\n\t\t\t\t\t\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tvar nodeId = children[ i ];\n\t\t\t\t\t\t\t\t\t\t\tvar bone = __nodes[ nodeId ];\n\t\t\t\t\t\t\t\t\t\t\tvar boneJson = json.nodes[ nodeId ];\n\n\t\t\t\t\t\t\t\t\t\t\tif ( bone !== undefined && bone.isBone === true && boneJson !== undefined ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\tparentObject.add( bone );\n\t\t\t\t\t\t\t\t\t\t\t\tbuildBoneGraph( boneJson, bone, 'children' );\n\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tbuildBoneGraph( node, child, 'skeletons' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_node.add( child );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( node.camera !== undefined ) {\n\n\t\t\t\t\t\tvar camera = dependencies.cameras[ node.camera ];\n\n\t\t\t\t\t\t_node.add( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( node.extensions\n\t\t\t\t\t\t\t && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ]\n\t\t\t\t\t\t\t && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ) {\n\n\t\t\t\t\t\tvar extensionLights = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].lights;\n\t\t\t\t\t\tvar light = extensionLights[ node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ];\n\n\t\t\t\t\t\t_node.add( light );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn _node;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\tGLTFParser.prototype.loadScenes = function () {\n\n\t\tvar json = this.json;\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, allNodes ) {\n\n\t\t\tvar _node = allNodes[ nodeId ];\n\t\t\tparentObject.add( _node );\n\n\t\t\tvar node = json.nodes[ nodeId ];\n\n\t\t\tif ( node.children ) {\n\n\t\t\t\tvar children = node.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\tbuildNodeHierachy( child, _node, allNodes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._withDependencies( [\n\n\t\t\t\"nodes\"\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\treturn _each( json.scenes, function ( scene ) {\n\n\t\t\t\tvar _scene = new THREE.Scene();\n\t\t\t\tif ( scene.name !== undefined ) _scene.name = scene.name;\n\n\t\t\t\tif ( scene.extras ) _scene.userData = scene.extras;\n\n\t\t\t\tvar nodes = scene.nodes || [];\n\n\t\t\t\tfor ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar nodeId = nodes[ i ];\n\t\t\t\t\tbuildNodeHierachy( nodeId, _scene, dependencies.nodes );\n\n\t\t\t\t}\n\n\t\t\t\t_scene.traverse( function ( child ) {\n\n\t\t\t\t\t// Register raw material meshes with GLTFLoader.Shaders\n\t\t\t\t\tif ( child.material && child.material.isRawShaderMaterial ) {\n\n\t\t\t\t\t\tchild.gltfShader = new GLTFShader( child, dependencies.nodes );\n\t\t\t\t\t\tchild.onBeforeRender = function(renderer, scene, camera){\n\t\t\t\t\t\t\tthis.gltfShader.update(scene, camera);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn _scene;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\treturn GLTFLoader;\n\n} )();\n"]}